{
	"info": {
		"_postman_id": "3dab0873-32f9-4aa9-8033-59f37d40222c",
		"name": "GoMyGoV2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40677215",
		"_collection_link": "https://kushfintech-qa.postman.co/workspace/GoMyGo~4a000e07-d272-44d8-93d6-74d93d0481d0/collection/44653028-3dab0873-32f9-4aa9-8033-59f37d40222c?action=share&source=collection_link&creator=40677215"
	},
	"item": [
		{
			"name": "Operators",
			"item": [
				{
					"name": "Auth",
					"item": [
						{
							"name": "Login",
							"item": [
								{
									"name": "Request OTP",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"mobileNumber\": \"{{loginMobileNumber}}\",\n  \"appSignature\": \"vinculum-degusto-tot\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/org/user/auth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"org",
												"user",
												"auth"
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify OTP",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse the response body",
													"let response = pm.response.json();",
													"",
													"// Check if accessToken is present and set it as environment variable",
													"if (response.data && response.data.accessToken) {",
													"    pm.environment.set(\"accessToken\", response.data.accessToken);",
													"    console.log(\"Access token saved to environment.\");",
													"} else {",
													"    console.warn(\"Access token not found in response.\");",
													"}",
													"",
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"mobileNumber\": \"{{loginMobileNumber}}\",\n  \"otp\": \"{{loginOTP}}\",\n  \"operation\": \"LOGIN\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/org/user/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"org",
												"user",
												"verify"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Routes",
					"item": [
						{
							"name": "Get Route Templates",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsImZ1bGxOYW1lIjoiIiwibW9iaWxlTnVtYmVyIjoiOTgwNTY3NTU4MCIsImVtYWlsIjoia3VzaGZpbnRlY2hAZ21haWwuY29tIiwiZG9iIjpudWxsLCJ0eXBlIjoiU1VQRVJfQURNSU4iLCJjb3VudHJ5Q29kZSI6Ijk3NyIsIndhbGxldElkIjoiIiwibmFtZSI6IiIsIm9yZyI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsInNlcnZpY2VUeXBlIjoiT1BFUkFUT1IiLCJhZGRyZXNzIjp7ImNvdW50cnkiOiIiLCJjaXR5IjoiIiwic3RhdGUiOiIifX0sImlhdCI6MTc0NjE3NTcxOSwibmJmIjoxNzQ2MTc1NzE5LCJleHAiOjE3NDg3Njc3MTksImF1ZCI6Imh0dHBzOi8vZXhhbXBsZS5jb20iLCJpc3MiOiJzdXBlci1hZG1pbnMiLCJzdWIiOiJHTUdEZXZlbG9wbWVudCJ9.dc8s4p-QyRyLck6D8n3w2F7vz_KRS0ij-YqF_9s8s2k"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/route/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										"route",
										"templates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new route from template",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsImZ1bGxOYW1lIjoiIiwibW9iaWxlTnVtYmVyIjoiOTgwNTY3NTU4MCIsImVtYWlsIjoia3VzaGZpbnRlY2hAZ21haWwuY29tIiwiZG9iIjpudWxsLCJ0eXBlIjoiU1VQRVJfQURNSU4iLCJjb3VudHJ5Q29kZSI6Ijk3NyIsIndhbGxldElkIjoiIiwibmFtZSI6IiIsIm9yZyI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsInNlcnZpY2VUeXBlIjoiT1BFUkFUT1IiLCJhZGRyZXNzIjp7ImNvdW50cnkiOiIiLCJjaXR5IjoiIiwic3RhdGUiOiIifX0sImlhdCI6MTc0NjE3NTcxOSwibmJmIjoxNzQ2MTc1NzE5LCJleHAiOjE3NDg3Njc3MTksImF1ZCI6Imh0dHBzOi8vZXhhbXBsZS5jb20iLCJpc3MiOiJzdXBlci1hZG1pbnMiLCJzdWIiOiJHTUdEZXZlbG9wbWVudCJ9.dc8s4p-QyRyLck6D8n3w2F7vz_KRS0ij-YqF_9s8s2k"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"route\": \"6814628f7eb6880ab0e0daea\",\n  \"name\": \"New Route\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/route/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										"route",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Routes",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsImZ1bGxOYW1lIjoiIiwibW9iaWxlTnVtYmVyIjoiOTgwNTY3NTU4MCIsImVtYWlsIjoia3VzaGZpbnRlY2hAZ21haWwuY29tIiwiZG9iIjpudWxsLCJ0eXBlIjoiU1VQRVJfQURNSU4iLCJjb3VudHJ5Q29kZSI6Ijk3NyIsIndhbGxldElkIjoiIiwibmFtZSI6IiIsIm9yZyI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsInNlcnZpY2VUeXBlIjoiT1BFUkFUT1IiLCJhZGRyZXNzIjp7ImNvdW50cnkiOiIiLCJjaXR5IjoiIiwic3RhdGUiOiIifX0sImlhdCI6MTc0NjE3NTcxOSwibmJmIjoxNzQ2MTc1NzE5LCJleHAiOjE3NDg3Njc3MTksImF1ZCI6Imh0dHBzOi8vZXhhbXBsZS5jb20iLCJpc3MiOiJzdXBlci1hZG1pbnMiLCJzdWIiOiJHTUdEZXZlbG9wbWVudCJ9.dc8s4p-QyRyLck6D8n3w2F7vz_KRS0ij-YqF_9s8s2k"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/route/list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										"route",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Route Details",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsImZ1bGxOYW1lIjoiIiwibW9iaWxlTnVtYmVyIjoiOTgwNTY3NTU4MCIsImVtYWlsIjoia3VzaGZpbnRlY2hAZ21haWwuY29tIiwiZG9iIjpudWxsLCJ0eXBlIjoiU1VQRVJfQURNSU4iLCJjb3VudHJ5Q29kZSI6Ijk3NyIsIndhbGxldElkIjoiIiwibmFtZSI6IiIsIm9yZyI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsInNlcnZpY2VUeXBlIjoiT1BFUkFUT1IiLCJhZGRyZXNzIjp7ImNvdW50cnkiOiIiLCJjaXR5IjoiIiwic3RhdGUiOiIifX0sImlhdCI6MTc0NjE3NTcxOSwibmJmIjoxNzQ2MTc1NzE5LCJleHAiOjE3NDg3Njc3MTksImF1ZCI6Imh0dHBzOi8vZXhhbXBsZS5jb20iLCJpc3MiOiJzdXBlci1hZG1pbnMiLCJzdWIiOiJHTUdEZXZlbG9wbWVudCJ9.dc8s4p-QyRyLck6D8n3w2F7vz_KRS0ij-YqF_9s8s2k"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/route/{{routeId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										"route",
										"{{routeId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Staffs",
					"item": [
						{
							"name": "Get Staffs List",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "user-agent",
										"value": "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_0)  AppleWebKit/536.0.0 (KHTML, like Gecko) Chrome/13.0.898.0 Safari/536.0.0"
									},
									{
										"key": "__utc_offset_minute",
										"value": ""
									},
									{
										"key": "x-custom-lang",
										"value": "en"
									},
									{
										"key": "x-timestamp",
										"value": "1746188549785"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsImZ1bGxOYW1lIjoiIiwibW9iaWxlTnVtYmVyIjoiOTgwNTY3NTU4MCIsImVtYWlsIjoia3VzaGZpbnRlY2hAZ21haWwuY29tIiwiZG9iIjpudWxsLCJ0eXBlIjoiU1VQRVJfQURNSU4iLCJjb3VudHJ5Q29kZSI6Ijk3NyIsIndhbGxldElkIjoiIiwibmFtZSI6IiIsIm9yZyI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsInNlcnZpY2VUeXBlIjoiT1BFUkFUT1IiLCJhZGRyZXNzIjp7ImNvdW50cnkiOiIiLCJjaXR5IjoiIiwic3RhdGUiOiIifX0sImlhdCI6MTc0NjE3NTcxOSwibmJmIjoxNzQ2MTc1NzE5LCJleHAiOjE3NDg3Njc3MTksImF1ZCI6Imh0dHBzOi8vZXhhbXBsZS5jb20iLCJpc3MiOiJzdXBlci1hZG1pbnMiLCJzdWIiOiJHTUdEZXZlbG9wbWVudCJ9.dc8s4p-QyRyLck6D8n3w2F7vz_KRS0ij-YqF_9s8s2k"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/user/list?isActive=true%2Cfalse&blocked=true%2Cfalse&inactivePermanent=true%2Cfalse&role=94d3946b-aa08-4a24-a5fa-c658627279b3&perPage=20&page=1&orderBy=createdAt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										"user",
										"list"
									],
									"query": [
										{
											"key": "isActive",
											"value": "true%2Cfalse"
										},
										{
											"key": "blocked",
											"value": "true%2Cfalse"
										},
										{
											"key": "inactivePermanent",
											"value": "true%2Cfalse"
										},
										{
											"key": "role",
											"value": "94d3946b-aa08-4a24-a5fa-c658627279b3"
										},
										{
											"key": "perPage",
											"value": "20"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "orderBy",
											"value": "createdAt"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create New Staff",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "user-agent",
										"value": "Mozilla/5.0 (Windows; U; Windows NT 5.0)AppleWebKit/531.2.0 (KHTML, like Gecko) Version/7.1.8 Safari/531.2.0"
									},
									{
										"key": "__utc_offset_minute",
										"value": ""
									},
									{
										"key": "x-custom-lang",
										"value": "en"
									},
									{
										"key": "x-timestamp",
										"value": "1746188549785"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsImZ1bGxOYW1lIjoiIiwibW9iaWxlTnVtYmVyIjoiOTgwNTY3NTU4MCIsImVtYWlsIjoia3VzaGZpbnRlY2hAZ21haWwuY29tIiwiZG9iIjpudWxsLCJ0eXBlIjoiU1VQRVJfQURNSU4iLCJjb3VudHJ5Q29kZSI6Ijk3NyIsIndhbGxldElkIjoiIiwibmFtZSI6IiIsIm9yZyI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsInNlcnZpY2VUeXBlIjoiT1BFUkFUT1IiLCJhZGRyZXNzIjp7ImNvdW50cnkiOiIiLCJjaXR5IjoiIiwic3RhdGUiOiIifX0sImlhdCI6MTc0NjE3NTcxOSwibmJmIjoxNzQ2MTc1NzE5LCJleHAiOjE3NDg3Njc3MTksImF1ZCI6Imh0dHBzOi8vZXhhbXBsZS5jb20iLCJpc3MiOiJzdXBlci1hZG1pbnMiLCJzdWIiOiJHTUdEZXZlbG9wbWVudCJ9.dc8s4p-QyRyLck6D8n3w2F7vz_KRS0ij-YqF_9s8s2k"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"Kenton13@gmail.com\",\n  \"mobileNumber\": \"0040761879\",\n  \"password\": \"u2Z9hrrwidj77Jt\",\n  \"fullName\": \"Elsie McCullough\",\n  \"middleName\": \"Reese\",\n  \"provider\": \"email\",\n  \"role\": \"f0655d9719b9bc7db6c3c046\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/user/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										"user",
										"create"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Vehicle Configs",
					"item": [
						{
							"name": "Get Vehicle Configs",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "user-agent",
										"value": "Opera/10.99 (Windows NT 5.3; U; ES Presto/2.9.167 Version/11.00)"
									},
									{
										"key": "__utc_offset_minute",
										"value": ""
									},
									{
										"key": "x-custom-lang",
										"value": "en"
									},
									{
										"key": "x-timestamp",
										"value": "1746188549794"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsImZ1bGxOYW1lIjoiIiwibW9iaWxlTnVtYmVyIjoiOTgwNTY3NTU4MCIsImVtYWlsIjoia3VzaGZpbnRlY2hAZ21haWwuY29tIiwiZG9iIjpudWxsLCJ0eXBlIjoiU1VQRVJfQURNSU4iLCJjb3VudHJ5Q29kZSI6Ijk3NyIsIndhbGxldElkIjoiIiwibmFtZSI6IiIsIm9yZyI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsInNlcnZpY2VUeXBlIjoiT1BFUkFUT1IiLCJhZGRyZXNzIjp7ImNvdW50cnkiOiIiLCJjaXR5IjoiIiwic3RhdGUiOiIifX0sImlhdCI6MTc0NjE3NTcxOSwibmJmIjoxNzQ2MTc1NzE5LCJleHAiOjE3NDg3Njc3MTksImF1ZCI6Imh0dHBzOi8vZXhhbXBsZS5jb20iLCJpc3MiOiJzdXBlci1hZG1pbnMiLCJzdWIiOiJHTUdEZXZlbG9wbWVudCJ9.dc8s4p-QyRyLck6D8n3w2F7vz_KRS0ij-YqF_9s8s2k"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/vehicle-config/list?isActive=true%2Cfalse&perPage=20&page=1&orderBy=createdAt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										"vehicle-config",
										"list"
									],
									"query": [
										{
											"key": "isActive",
											"value": "true%2Cfalse"
										},
										{
											"key": "perPage",
											"value": "20"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "orderBy",
											"value": "createdAt"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Vehicles",
					"item": [
						{
							"name": "Create new Vehicle",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "user-agent",
										"value": "Mozilla/5.0 (Windows NT 5.1; Win64; x64; rv:14.9) Gecko/20100101 Firefox/14.9.2"
									},
									{
										"key": "__utc_offset_minute",
										"value": ""
									},
									{
										"key": "x-custom-lang",
										"value": "en"
									},
									{
										"key": "x-timestamp",
										"value": "1746188549804"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsImZ1bGxOYW1lIjoiIiwibW9iaWxlTnVtYmVyIjoiOTgwNTY3NTU4MCIsImVtYWlsIjoia3VzaGZpbnRlY2hAZ21haWwuY29tIiwiZG9iIjpudWxsLCJ0eXBlIjoiU1VQRVJfQURNSU4iLCJjb3VudHJ5Q29kZSI6Ijk3NyIsIndhbGxldElkIjoiIiwibmFtZSI6IiIsIm9yZyI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsInNlcnZpY2VUeXBlIjoiT1BFUkFUT1IiLCJhZGRyZXNzIjp7ImNvdW50cnkiOiIiLCJjaXR5IjoiIiwic3RhdGUiOiIifX0sImlhdCI6MTc0NjE3NTcxOSwibmJmIjoxNzQ2MTc1NzE5LCJleHAiOjE3NDg3Njc3MTksImF1ZCI6Imh0dHBzOi8vZXhhbXBsZS5jb20iLCJpc3MiOiJzdXBlci1hZG1pbnMiLCJzdWIiOiJHTUdEZXZlbG9wbWVudCJ9.dc8s4p-QyRyLck6D8n3w2F7vz_KRS0ij-YqF_9s8s2k"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"categories\": [\n    \"6814a1cb4dc20bab6bb6b947\"\n  ],\n  \"features\": [\n    \"6814a1ec4dc20bab6bb6b94d\"\n  ],\n  \"facilities\": [\n    \"6814a1a44dc20bab6bb6b93e\"\n  ],\n  \"seatType\": [\n    \"6814a2354dc20bab6bb6b956\"\n  ],\n  \"type\": [\n    \"6814a1b64dc20bab6bb6b944\"\n  ],\n  \"layout\": [\n    \"6814a2204dc20bab6bb6b953\"\n  ],\n  \"brand\": [\n    \"6814a19a4dc20bab6bb6b93b\"\n  ],\n  \"name\": \"N2@ucOYr|P\",\n  \"numberPlate\": \"%g0b.fi+a}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/vehicle/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										"vehicle",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Vehicles",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "user-agent",
										"value": "Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.1)"
									},
									{
										"key": "__utc_offset_minute",
										"value": ""
									},
									{
										"key": "x-custom-lang",
										"value": "en"
									},
									{
										"key": "x-timestamp",
										"value": "1746188549804"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsImZ1bGxOYW1lIjoiIiwibW9iaWxlTnVtYmVyIjoiOTgwNTY3NTU4MCIsImVtYWlsIjoia3VzaGZpbnRlY2hAZ21haWwuY29tIiwiZG9iIjpudWxsLCJ0eXBlIjoiU1VQRVJfQURNSU4iLCJjb3VudHJ5Q29kZSI6Ijk3NyIsIndhbGxldElkIjoiIiwibmFtZSI6IiIsIm9yZyI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsInNlcnZpY2VUeXBlIjoiT1BFUkFUT1IiLCJhZGRyZXNzIjp7ImNvdW50cnkiOiIiLCJjaXR5IjoiIiwic3RhdGUiOiIifX0sImlhdCI6MTc0NjE3NTcxOSwibmJmIjoxNzQ2MTc1NzE5LCJleHAiOjE3NDg3Njc3MTksImF1ZCI6Imh0dHBzOi8vZXhhbXBsZS5jb20iLCJpc3MiOiJzdXBlci1hZG1pbnMiLCJzdWIiOiJHTUdEZXZlbG9wbWVudCJ9.dc8s4p-QyRyLck6D8n3w2F7vz_KRS0ij-YqF_9s8s2k"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/vehicle/lists?isActive=true%2Cfalse&perPage=20&page=1&orderBy=createdAt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										"vehicle",
										"lists"
									],
									"query": [
										{
											"key": "isActive",
											"value": "true%2Cfalse"
										},
										{
											"key": "perPage",
											"value": "20"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "orderBy",
											"value": "createdAt"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Account details",
					"item": [
						{
							"name": "Get Account details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "user-agent",
										"value": "Mozilla/5.0 (Windows; U; Windows NT 6.1) AppleWebKit/537.0.2 (KHTML, like Gecko) Chrome/20.0.868.0 Safari/537.0.2"
									},
									{
										"key": "__utc_offset_minute",
										"value": ""
									},
									{
										"key": "x-custom-lang",
										"value": "en"
									},
									{
										"key": "x-timestamp",
										"value": "1746361484366"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsImZ1bGxOYW1lIjoia3VzaCBmaW50ZWNoIiwibW9iaWxlTnVtYmVyIjoiOTgwNTY3NTU4MCIsImVtYWlsIjoia3VzaGZpbnRlY2hAZ21haWwuY29tIiwiZG9iIjpudWxsLCJ0eXBlIjoiU1VQRVJfQURNSU4iLCJjb3VudHJ5Q29kZSI6Ijk3NyIsIndhbGxldElkIjoiIiwibmFtZSI6IiIsIm9yZyI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsInNlcnZpY2VUeXBlIjoiT1BFUkFUT1IiLCJhZGRyZXNzIjp7ImNvdW50cnkiOiIiLCJjaXR5IjoiIiwic3RhdGUiOiIifX0sImlhdCI6MTc0NjQyNjA3NiwibmJmIjoxNzQ2NDI2MDc2LCJleHAiOjE3NDkwMTgwNzYsImF1ZCI6Imh0dHBzOi8vZXhhbXBsZS5jb20iLCJpc3MiOiJzdXBlci1hZG1pbnMiLCJzdWIiOiJHTUdEZXZlbG9wbWVudCJ9.GBgTYK5r27LV0lyfoqTFi7j6ItVanGQDjT6FuNiFZKY"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/account-detail/list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										"account-detail",
										"list"
									],
									"query": [
										{
											"key": "org",
											"value": "68136f5605b4db927541cbc3",
											"disabled": true
										},
										{
											"key": "isPrimary",
											"value": "true",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Services",
					"item": [
						{
							"name": "Get Service List",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "user-agent",
										"value": "Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.1)"
									},
									{
										"key": "__utc_offset_minute",
										"value": ""
									},
									{
										"key": "x-custom-lang",
										"value": "en"
									},
									{
										"key": "x-timestamp",
										"value": "1746188549804"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsImZ1bGxOYW1lIjoiIiwibW9iaWxlTnVtYmVyIjoiOTgwNTY3NTU4MCIsImVtYWlsIjoia3VzaGZpbnRlY2hAZ21haWwuY29tIiwiZG9iIjpudWxsLCJ0eXBlIjoiU1VQRVJfQURNSU4iLCJjb3VudHJ5Q29kZSI6Ijk3NyIsIndhbGxldElkIjoiIiwibmFtZSI6IiIsIm9yZyI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsInNlcnZpY2VUeXBlIjoiT1BFUkFUT1IiLCJhZGRyZXNzIjp7ImNvdW50cnkiOiIiLCJjaXR5IjoiIiwic3RhdGUiOiIifX0sImlhdCI6MTc0NjE3NTcxOSwibmJmIjoxNzQ2MTc1NzE5LCJleHAiOjE3NDg3Njc3MTksImF1ZCI6Imh0dHBzOi8vZXhhbXBsZS5jb20iLCJpc3MiOiJzdXBlci1hZG1pbnMiLCJzdWIiOiJHTUdEZXZlbG9wbWVudCJ9.dc8s4p-QyRyLck6D8n3w2F7vz_KRS0ij-YqF_9s8s2k"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/trip/list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										"trip",
										"list"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Live Trips",
					"item": [
						{
							"name": "List Live Trips",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "user-agent",
										"value": "Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.1)"
									},
									{
										"key": "__utc_offset_minute",
										"value": ""
									},
									{
										"key": "x-custom-lang",
										"value": "en"
									},
									{
										"key": "x-timestamp",
										"value": "1746188549804"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsImZ1bGxOYW1lIjoiIiwibW9iaWxlTnVtYmVyIjoiOTgwNTY3NTU4MCIsImVtYWlsIjoia3VzaGZpbnRlY2hAZ21haWwuY29tIiwiZG9iIjpudWxsLCJ0eXBlIjoiU1VQRVJfQURNSU4iLCJjb3VudHJ5Q29kZSI6Ijk3NyIsIndhbGxldElkIjoiIiwibmFtZSI6IiIsIm9yZyI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsInNlcnZpY2VUeXBlIjoiT1BFUkFUT1IiLCJhZGRyZXNzIjp7ImNvdW50cnkiOiIiLCJjaXR5IjoiIiwic3RhdGUiOiIifX0sImlhdCI6MTc0NjE3NTcxOSwibmJmIjoxNzQ2MTc1NzE5LCJleHAiOjE3NDg3Njc3MTksImF1ZCI6Imh0dHBzOi8vZXhhbXBsZS5jb20iLCJpc3MiOiJzdXBlci1hZG1pbnMiLCJzdWIiOiJHTUdEZXZlbG9wbWVudCJ9.dc8s4p-QyRyLck6D8n3w2F7vz_KRS0ij-YqF_9s8s2k"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/live-trip/list?trip=6810f897c01378a906a60a2e",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										"live-trip",
										"list"
									],
									"query": [
										{
											"key": "trip",
											"value": "6810f897c01378a906a60a2e"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete live trip by id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "user-agent",
										"value": "Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.1)"
									},
									{
										"key": "__utc_offset_minute",
										"value": ""
									},
									{
										"key": "x-custom-lang",
										"value": "en"
									},
									{
										"key": "x-timestamp",
										"value": "1746188549804"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsImZ1bGxOYW1lIjoiIiwibW9iaWxlTnVtYmVyIjoiOTgwNTY3NTU4MCIsImVtYWlsIjoia3VzaGZpbnRlY2hAZ21haWwuY29tIiwiZG9iIjpudWxsLCJ0eXBlIjoiU1VQRVJfQURNSU4iLCJjb3VudHJ5Q29kZSI6Ijk3NyIsIndhbGxldElkIjoiIiwibmFtZSI6IiIsIm9yZyI6IjY4MTM2ZjU2MDViNGRiOTI3NTQxY2JjMyIsInNlcnZpY2VUeXBlIjoiT1BFUkFUT1IiLCJhZGRyZXNzIjp7ImNvdW50cnkiOiIiLCJjaXR5IjoiIiwic3RhdGUiOiIifX0sImlhdCI6MTc0NjE3NTcxOSwibmJmIjoxNzQ2MTc1NzE5LCJleHAiOjE3NDg3Njc3MTksImF1ZCI6Imh0dHBzOi8vZXhhbXBsZS5jb20iLCJpc3MiOiJzdXBlci1hZG1pbnMiLCJzdWIiOiJHTUdEZXZlbG9wbWVudCJ9.dc8s4p-QyRyLck6D8n3w2F7vz_KRS0ij-YqF_9s8s2k"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/live-trip/delete/6864363bec06f1320a58924a",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										"live-trip",
										"delete",
										"6864363bec06f1320a58924a"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Customers",
			"item": [
				{
					"name": "Get Trips List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 6.2; WOW64; rv:8.9) Gecko/20100101 Firefox/8.9.7"
							},
							{
								"key": "__utc_offset_minute",
								"value": ""
							},
							{
								"key": "x-custom-lang",
								"value": "en"
							},
							{
								"key": "x-timestamp",
								"value": "1752153861842"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/agent/trip/list?seats=1&from=Kathmandu&to=Jhapa&date=2025-07-09T18%3A15%3A00.000Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"agent",
								"trip",
								"list"
							],
							"query": [
								{
									"key": "seats",
									"value": "1"
								},
								{
									"key": "from",
									"value": "Kathmandu"
								},
								{
									"key": "to",
									"value": "Jhapa"
								},
								{
									"key": "date",
									"value": "2025-07-09T18%3A15%3A00.000Z"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "Trips Seats",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "Trip Check Seat Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "Trips Pick and Drop Locations Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "Create Booking",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "Destroy Booking Session",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "Payment Gateways List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "Get Payment Token or URL",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "Auth Staff",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"token set in env\", function(){\r",
											"    const jsonData = pm.response.json();\r",
											"\r",
											"    pm.environment.set(\"bearerToken\", jsonData.data.accessToken);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "user-agent",
										"value": "Mozilla/5.0 (X11; Linux i686 AppleWebKit/536.1.0 (KHTML, like Gecko) Chrome/23.0.869.0 Safari/536.1.0",
										"description": "User agent header"
									},
									{
										"key": "__utc_offset_minute",
										"value": "-345",
										"description": "utc offset minute, `new Date().getTimezoneOffset()`"
									},
									{
										"key": "x-custom-lang",
										"value": "en",
										"description": "Custom language header"
									},
									{
										"key": "x-timestamp",
										"value": "1746534488465",
										"description": "Timestamp header, in microseconds"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"bibekanand@kushfintech.com\",\n  \"password\": \"Kush@#$12345\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/admin/staff/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"staff",
										"login"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "user-agent",
												"value": "Mozilla/5.0 (X11; Linux i686 AppleWebKit/536.1.0 (KHTML, like Gecko) Chrome/23.0.869.0 Safari/536.1.0",
												"description": "User agent header"
											},
											{
												"key": "__utc_offset_minute",
												"value": "-345",
												"description": "utc offset minute, `new Date().getTimezoneOffset()`"
											},
											{
												"key": "x-custom-lang",
												"value": "en",
												"description": "Custom language header"
											},
											{
												"key": "x-timestamp",
												"value": "1746534488465",
												"description": "Timestamp header, in microseconds"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/staff/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"staff",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": \"<number>\",\n  \"message\": \"<string>\",\n  \"_metadata\": {},\n  \"data\": {}\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "user-agent",
												"value": "Mozilla/5.0 (X11; Linux i686 AppleWebKit/536.1.0 (KHTML, like Gecko) Chrome/23.0.869.0 Safari/536.1.0",
												"description": "User agent header"
											},
											{
												"key": "__utc_offset_minute",
												"value": "-345",
												"description": "utc offset minute, `new Date().getTimezoneOffset()`"
											},
											{
												"key": "x-custom-lang",
												"value": "en",
												"description": "Custom language header"
											},
											{
												"key": "x-timestamp",
												"value": "1746534488465",
												"description": "Timestamp header, in microseconds"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/staff/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"staff",
												"login"
											]
										}
									},
									"status": "Request Timeout",
									"code": 408,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": \"<number>\",\n  \"message\": \"<string>\",\n  \"_metadata\": {}\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "user-agent",
												"value": "Mozilla/5.0 (X11; Linux i686 AppleWebKit/536.1.0 (KHTML, like Gecko) Chrome/23.0.869.0 Safari/536.1.0",
												"description": "User agent header"
											},
											{
												"key": "__utc_offset_minute",
												"value": "-345",
												"description": "utc offset minute, `new Date().getTimezoneOffset()`"
											},
											{
												"key": "x-custom-lang",
												"value": "en",
												"description": "Custom language header"
											},
											{
												"key": "x-timestamp",
												"value": "1746534488465",
												"description": "Timestamp header, in microseconds"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/staff/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"staff",
												"login"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": \"<number>\",\n  \"message\": \"<string>\",\n  \"_metadata\": {}\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "user-agent",
												"value": "Mozilla/5.0 (X11; Linux i686 AppleWebKit/536.1.0 (KHTML, like Gecko) Chrome/23.0.869.0 Safari/536.1.0",
												"description": "User agent header"
											},
											{
												"key": "__utc_offset_minute",
												"value": "-345",
												"description": "utc offset minute, `new Date().getTimezoneOffset()`"
											},
											{
												"key": "x-custom-lang",
												"value": "en",
												"description": "Custom language header"
											},
											{
												"key": "x-timestamp",
												"value": "1746534488465",
												"description": "Timestamp header, in microseconds"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/staff/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"staff",
												"login"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": \"<number>\",\n  \"message\": \"<string>\",\n  \"_metadata\": {}\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "user-agent",
												"value": "Mozilla/5.0 (X11; Linux i686 AppleWebKit/536.1.0 (KHTML, like Gecko) Chrome/23.0.869.0 Safari/536.1.0",
												"description": "User agent header"
											},
											{
												"key": "__utc_offset_minute",
												"value": "-345",
												"description": "utc offset minute, `new Date().getTimezoneOffset()`"
											},
											{
												"key": "x-custom-lang",
												"value": "en",
												"description": "Custom language header"
											},
											{
												"key": "x-timestamp",
												"value": "1746534488465",
												"description": "Timestamp header, in microseconds"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/staff/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"staff",
												"login"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": \"<number>\",\n  \"message\": \"<string>\",\n  \"_metadata\": {}\n}"
								}
							]
						}
					]
				},
				{
					"name": "Live Trip Desktop",
					"item": [
						{
							"name": "Live trip lists",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is correct\",function(){\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"const json = pm.response.json();\r",
											"\r",
											"// Ensure 'data' is an array and has at least one element\r",
											"pm.test(\"Response contains a data array with at least one item\", function () {\r",
											"    pm.expect(json).to.have.property(\"data\").that.is.an(\"array\").with.length.above(0);\r",
											"});\r",
											"\r",
											"const trip = json.data[0];\r",
											"\r",
											"pm.test(\"All top-level keys are present\", function () {\r",
											"    const keys = [\r",
											"        \"_id\", \"refId\", \"org\", \"route\", \"vehicle\", \"routeDetails\",\r",
											"        \"startTime\", \"reachTime\", \"isActive\", \"contactPerson\",\r",
											"        \"isRefundable\", \"name\", \"seats\", \"seatInformation\", \"status\",\r",
											"        \"shift\", \"duration\", \"availableSeats\", \"unBookedSeats\", \"totalSeats\",\r",
											"        \"base\", \"maxPrice\", \"vehicleSettings\", \"createdAt\", \"updatedAt\",\r",
											"        \"orgName\", \"bookingServiceCharge\", \"selfBookingServiceCharge\",\r",
											"        \"currentTime\", \"tripCutoffTime\", \"source\", \"destination\"\r",
											"    ];\r",
											"\r",
											"    keys.forEach(key => {\r",
											"        pm.expect(trip, `Missing key: ${key}`).to.have.property(key);\r",
											"    });\r",
											"});\r",
											"\r",
											"pm.test(\"Top-level property types are correct\", function () {\r",
											"    pm.expect(trip._id).to.be.a(\"string\");\r",
											"    pm.expect(trip.refId).to.be.a(\"string\");\r",
											"    pm.expect(trip.org).to.be.a(\"string\");\r",
											"    pm.expect(trip.route).to.be.an(\"array\");\r",
											"    pm.expect(trip.vehicle).to.be.an(\"object\");\r",
											"    pm.expect(trip.routeDetails).to.be.an(\"object\");\r",
											"    pm.expect(trip.startTime).to.be.a(\"string\");\r",
											"    pm.expect(trip.reachTime).to.be.a(\"string\");\r",
											"    pm.expect(trip.isActive).to.be.a(\"boolean\");\r",
											"    pm.expect(trip.contactPerson).to.be.an(\"array\");\r",
											"    pm.expect(trip.name).to.be.a(\"string\");\r",
											"    pm.expect(trip.seats).to.be.an(\"array\");\r",
											"    pm.expect(trip.seatInformation).to.be.an(\"object\");\r",
											"    pm.expect(trip.status).to.be.a(\"string\");\r",
											"    pm.expect(trip.shift).to.be.a(\"string\");\r",
											"    pm.expect(trip.duration).to.be.a(\"number\");\r",
											"    pm.expect(trip.availableSeats).to.be.a(\"number\");\r",
											"    pm.expect(trip.unBookedSeats).to.be.a(\"number\");\r",
											"    pm.expect(trip.totalSeats).to.be.a(\"number\");\r",
											"    pm.expect(trip.base).to.be.a(\"number\");\r",
											"    pm.expect(trip.maxPrice).to.be.a(\"number\");\r",
											"    pm.expect(trip.vehicleSettings).to.be.an(\"object\");\r",
											"    pm.expect(trip.createdAt).to.be.a(\"string\");\r",
											"    pm.expect(trip.updatedAt).to.be.a(\"string\");\r",
											"    pm.expect(trip.orgName).to.be.a(\"string\");\r",
											"    pm.expect(trip.bookingServiceCharge).to.be.an(\"object\");\r",
											"    pm.expect(trip.selfBookingServiceCharge).to.be.an(\"object\");\r",
											"    pm.expect(trip.currentTime).to.be.a(\"string\");\r",
											"    pm.expect(trip.tripCutoffTime).to.be.a(\"number\");\r",
											"    pm.expect(trip.source).to.be.an(\"object\");\r",
											"    pm.expect(trip.destination).to.be.an(\"object\");\r",
											"    pm.expect(trip.destination)\r",
											"});\r",
											"\r",
											"pm.test(\"Vehicle profile and configs are valid\", function () {\r",
											"    const profile = trip.vehicle.profile;\r",
											"    pm.expect(profile).to.have.property(\"completedUrl\").that.is.a(\"string\");\r",
											"\r",
											"    trip.vehicle.configs.forEach(config => {\r",
											"        pm.expect(config).to.have.property(\"type\").that.is.a(\"string\");\r",
											"        pm.expect(config).to.have.property(\"value\").that.is.a(\"string\");\r",
											"    });\r",
											"});\r",
											"\r",
											"pm.test(\"Each seat has required fields\", function () {\r",
											"    trip.seats.forEach(seat => {\r",
											"        pm.expect(seat).to.have.property(\"title\").that.is.a(\"string\");\r",
											"        pm.expect(seat).to.have.property(\"price\").that.is.a(\"number\");\r",
											"        pm.expect(seat).to.have.property(\"status\").that.is.a(\"string\");\r",
											"        pm.expect(seat).to.have.property(\"isBooked\").that.is.a(\"boolean\");\r",
											"    });\r",
											"});\r",
											"\r",
											"pm.test(\"Live trip id set to environment successfullt\", function () {\r",
											"    pm.environment.set(\"livetripId\", pm.response.json().data[0]._id);\r",
											"\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "user-agent",
										"value": "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.7.9; rv:7.8) Gecko/20100101 Firefox/7.8.2"
									},
									{
										"key": "__utc_offset_minute",
										"value": ""
									},
									{
										"key": "x-custom-lang",
										"value": "en"
									},
									{
										"key": "x-timestamp",
										"value": "1749865689002"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY3ODg2YWU2YmVjODJmZWMzOTZkZDZiNiIsImZ1bGxOYW1lIjoiYmliZWthbmFuZCBrdXNod2FoYSIsIm1vYmlsZU51bWJlciI6Ijk4MDU2NzU1ODAiLCJlbWFpbCI6ImJpYmVrYW5hbmRAa3VzaGZpbnRlY2guY29tIiwidHlwZSI6IkFETUlOX1NUQUZGIiwiY29kZSI6IlFQUlVXVUNBIiwic2VydmljZVR5cGUiOiJBRE1JTiJ9LCJpYXQiOjE3NTAwNDYwMTgsIm5iZiI6MTc1MDA0NjAxOCwiZXhwIjoxNzUwMDc0ODE4LCJhdWQiOiJodHRwczovL2V4YW1wbGUuY29tIiwiaXNzIjoiZ21nIiwic3ViIjoiR01HRGV2ZWxvcG1lbnQifQ.Pt6AWouik43nNfejy4SuUF8gUVtRfXtuobTLCGhxM1E"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/admin/live-trip/desktop/list?date=2025/06/26",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"live-trip",
										"desktop",
										"list"
									],
									"query": [
										{
											"key": "seats",
											"value": "1",
											"disabled": true
										},
										{
											"key": "from",
											"value": "bc4b3caf74c478facbaffb9d",
											"disabled": true
										},
										{
											"key": "to",
											"value": "7c49b287b9c4ac8efbea581e",
											"disabled": true
										},
										{
											"key": "isRefundable",
											"value": "true%2Cfalse",
											"disabled": true
										},
										{
											"key": "shift",
											"value": "DAY",
											"disabled": true
										},
										{
											"key": "date",
											"value": "2025/06/26"
										},
										{
											"key": "operator",
											"value": "b1da2dfcbde959edf4f06c3b",
											"disabled": true
										},
										{
											"key": "departure",
											"value": "MORNING%2CDAY%2CEVENING%2CNIGHT",
											"disabled": true
										},
										{
											"key": "vehicle",
											"value": "95d018b0fddfcdb82b5d7804",
											"disabled": true
										},
										{
											"key": "perPage",
											"value": "20",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "orderBy",
											"value": "createdAt",
											"disabled": true
										}
									]
								},
								"description": "Generated from cURL: curl -X 'GET' \\\r\n  'https://stg.api.gomygo.com/api/v1/admin/live-trip/desktop/list?seats=1&from=bc4b3caf74c478facbaffb9d&to=7c49b287b9c4ac8efbea581e&isRefundable=true%2Cfalse&shift=DAY&date=2022-12-31T18%3A15%3A00.000Z&operator=b1da2dfcbde959edf4f06c3b&departure=MORNING%2CDAY%2CEVENING%2CNIGHT&vehicle=95d018b0fddfcdb82b5d7804&perPage=20&page=1&orderBy=createdAt' \\\r\n  -H 'accept: application/json' \\\r\n  -H 'user-agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.7.9; rv:7.8) Gecko/20100101 Firefox/7.8.2' \\\r\n  -H __utc_offset_minute: -345 \\\r\n  -H 'x-custom-lang: en' \\\r\n  -H 'x-timestamp: 1749865689002' \\\r\n  -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY3ODg2YWU2YmVjODJmZWMzOTZkZDZiNiIsImZ1bGxOYW1lIjoiYmliZWthbmFuZCBrdXNod2FoYSIsIm1vYmlsZU51bWJlciI6Ijk4MDU2NzU1ODAiLCJlbWFpbCI6ImJpYmVrYW5hbmRAa3VzaGZpbnRlY2guY29tIiwidHlwZSI6IkFETUlOX1NUQUZGIiwiY29kZSI6IlFQUlVXVUNBIiwic2VydmljZVR5cGUiOiJBRE1JTiJ9LCJpYXQiOjE3NTAwNDYwMTgsIm5iZiI6MTc1MDA0NjAxOCwiZXhwIjoxNzUwMDc0ODE4LCJhdWQiOiJodHRwczovL2V4YW1wbGUuY29tIiwiaXNzIjoiZ21nIiwic3ViIjoiR01HRGV2ZWxvcG1lbnQifQ.Pt6AWouik43nNfejy4SuUF8gUVtRfXtuobTLCGhxM1E'"
							},
							"response": []
						},
						{
							"name": "Trip Seats",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"const responseJson = response.data;\r",
											"\r",
											"pm.test(\"It has all the keys\", function () {\r",
											"    pm.expect(responseJson).to.be.an(\"object\");\r",
											"\r",
											"    pm.expect(responseJson).to.have.property(\"_id\").that.is.a(\"string\");\r",
											"    pm.expect(responseJson).to.have.property(\"seats\").that.is.an(\"array\");\r",
											"    pm.expect(responseJson).to.have.property(\"seatInformation\").that.is.an(\"object\");\r",
											"    pm.expect(responseJson).to.have.property(\"minDiscountedPrice\").that.is.a(\"number\");\r",
											"    pm.expect(responseJson).to.have.property(\"maxDiscountedPrice\").that.is.a(\"number\");\r",
											"});\r",
											"\r",
											"pm.test(\"Every seat has required keys with correct types\", function () {\r",
											"    let seats = response.data.seats;\r",
											"    pm.expect(seats).to.be.an(\"array\");\r",
											"\r",
											"    seats.forEach((seat, index) => {\r",
											"        pm.expect(seat, `seat at index ${index}`).to.have.property(\"title\").that.is.a(\"string\");\r",
											"        pm.expect(seat, `Seat at index ${index}`).to.have.property(\"status\").that.is.a(\"string\");\r",
											"        pm.expect(seat, `Seat at index ${index}`).to.have.property(\"price\").that.is.a(\"number\");\r",
											"        pm.expect(seat, `Seat at index ${index}`).to.have.property(\"discount\").that.is.a(\"number\");\r",
											"        pm.expect(seat, `Seat at index ${index}`).to.have.property(\"variant\").that.is.a(\"string\");\r",
											"        pm.expect(seat, `Seat at index ${index}`).to.have.property(\"gender\").that.is.a(\"string\");\r",
											"        pm.expect(seat, `Seat at index ${index}`).to.have.property(\"group\").that.is.an(\"array\");\r",
											"        pm.expect(seat, `Seat at index ${index}`).to.have.property(\"attached\").that.is.an(\"array\");\r",
											"        pm.expect(seat, `Seat at index ${index}`).to.have.property(\"isGroupBookingEnabled\").that.is.a(\"boolean\");\r",
											"        pm.expect(seat, `Seat at index ${index}`).to.have.property(\"rowSpan\").that.is.a(\"number\");\r",
											"        pm.expect(seat, `Seat at index ${index}`).to.have.property(\"columnSpan\").that.is.a(\"number\");\r",
											"        pm.expect(seat, `Seat at index ${index}`).to.have.property(\"row\").that.is.a(\"number\");\r",
											"        pm.expect(seat, `Seat at index ${index}`).to.have.property(\"column\").that.is.a(\"number\");\r",
											"        pm.expect(seat, `Seat at index ${index}`).to.have.property(\"layer\").that.is.a(\"number\");\r",
											"        pm.expect(seat, `Seat at index ${index}`).to.have.property(\"orientation\").that.is.a(\"number\");\r",
											"\r",
											"        // booking can be null or object\r",
											"        pm.expect(seat.booking === null || typeof seat.booking === \"string\", `Seat at index ${index} - booking`).to.be.true;\r",
											"\r",
											"        pm.expect(seat, `Seat at index ${index}`).to.have.property(\"discountType\").that.is.a(\"string\");\r",
											"    });\r",
											"});\r",
											"\r",
											"pm.test(\"seatInformation has required keys with correct types\", function () {\r",
											"    pm.expect(responseJson.seatInformation).to.have.property(\"totalRow\").that.is.a(\"number\");\r",
											"    pm.expect(responseJson.seatInformation).to.have.property(\"totalColumn\").that.is.a(\"number\");\r",
											"    pm.expect(responseJson.seatInformation).to.have.property(\"_id\").that.is.a(\"string\");\r",
											"\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "user-agent",
										"value": "Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_10_8 rv:3.0; SQ) AppleWebKit/538.2.1 (KHTML, like Gecko) Version/4.0.9 Safari/538.2.1"
									},
									{
										"key": "__utc_offset_minute",
										"value": ""
									},
									{
										"key": "x-custom-lang",
										"value": "en"
									},
									{
										"key": "x-timestamp",
										"value": "1750231363447"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/admin/live-trip/desktop/seats/:trip",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"live-trip",
										"desktop",
										"seats",
										":trip"
									],
									"variable": [
										{
											"key": "trip",
											"value": "{{livetripId}}"
										}
									]
								},
								"description": "Generated from cURL: curl -X 'GET' \\\r\n  'http://192.168.1.85:3000/api/v1/admin/live-trip/desktop/seats/685290cbdcf95140e0ac5ad7' \\\r\n  -H 'accept: application/json' \\\r\n  -H 'user-agent: Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_10_8 rv:3.0; SQ) AppleWebKit/538.2.1 (KHTML, like Gecko) Version/4.0.9 Safari/538.2.1' \\\r\n  -H __utc_offset_minute: -345 \\\r\n  -H 'x-custom-lang: en' \\\r\n  -H 'x-timestamp: 1750231363447' \\\r\n  -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY4NDZjYTVmZDZlNjc0NmUzOTc5NDhkNCIsImZ1bGxOYW1lIjoic2F0eWFuIiwibW9iaWxlTnVtYmVyIjoiOTg2MTU2NjM4OSIsImVtYWlsIjoic2F0eWFuQGdtYWlsLmNvbSIsInR5cGUiOiJTVVBFUl9BRE1JTiIsIm9yZyI6IjY4NDZjYTVmZDZlNjc0NmUzOTc5NDhkNCIsImNvZGUiOiJUR0FaVFJTWSIsInNlcnZpY2VUeXBlIjoiT1BFUkFUT1IifSwiaWF0IjoxNzQ5NjQyMTIzLCJuYmYiOjE3NDk2NDIxMjMsImV4cCI6MTc1MjIzNDEyMywiYXVkIjoiaHR0cHM6Ly9leGFtcGxlLmNvbSIsImlzcyI6InN1cGVyLWFkbWlucyIsInN1YiI6IkdNR0RldmVsb3BtZW50In0.IgYbhabnXdBJD4ePDNFeK0HZeX2IyJp9wyf7bwwEqVM'"
							},
							"response": []
						}
					]
				},
				{
					"name": "Add Org",
					"item": [
						{
							"name": "List Staff",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();\r",
											"\r",
											"pm.test(\"Response is an array with at least one user\", function () {\r",
											"    pm.expect(response.data).to.be.an(\"array\").that.is.not.empty;\r",
											"});\r",
											"\r",
											"let user = response.data[0]; // Only test the first user\r",
											"\r",
											"\r",
											"pm.test(\"First user has required keys\", function () {\r",
											"    const requiredKeys = [\r",
											"        \"_id\", \"fullName\", \"mobileNumber\", \"email\",\r",
											"        \"isActive\", \"blocked\", \"type\", \"organizations\", \"org\"\r",
											"    ];\r",
											"    requiredKeys.forEach(key => {\r",
											"        pm.expect(user).to.have.property(key);\r",
											"    });\r",
											"});\r",
											"\r",
											"// Type checks\r",
											"pm.test(\"Top-level types of first user are correct\", function () {\r",
											"    pm.expect(typeof user._id).to.eql(\"string\");\r",
											"    pm.expect(typeof user.fullName).to.eql(\"string\");\r",
											"    pm.expect(typeof user.mobileNumber).to.eql(\"string\");\r",
											"    pm.expect(typeof user.email).to.eql(\"string\");\r",
											"    pm.expect(typeof user.isActive).to.eql(\"boolean\");\r",
											"    pm.expect(typeof user.blocked).to.eql(\"boolean\");\r",
											"    pm.expect(typeof user.type).to.eql(\"string\");\r",
											"    pm.expect(Array.isArray(user.organizations)).to.be.true;\r",
											"    pm.expect(typeof user.org).to.eql(\"object\");\r",
											"});\r",
											"\r",
											"// Check nested org (inside 'org')\r",
											"pm.test(\"First user's 'org' has expected fields\", function () {\r",
											"    const org = user.org;\r",
											"    pm.expect(org).to.have.property(\"_id\");\r",
											"    pm.expect(org).to.have.property(\"name\");\r",
											"    pm.expect(org).to.have.property(\"phone\");\r",
											"    pm.expect(typeof org._id).to.eql(\"string\");\r",
											"    pm.expect(typeof org.name).to.eql(\"string\");\r",
											"    pm.expect(typeof org.phone).to.eql(\"string\");\r",
											"    if (org.email !== undefined) {\r",
											"        pm.expect(typeof org.email).to.eql(\"string\");\r",
											"    }\r",
											"});\r",
											"\r",
											"// Check one organization in organizations array if it exists\r",
											"if (user.organizations && user.organizations.length > 0) {\r",
											"    let firstOrg = user.organizations[0];\r",
											"\r",
											"    pm.test(\"First user's first organization is valid\", function () {\r",
											"        pm.expect(firstOrg).to.have.property(\"org\");\r",
											"        pm.expect(firstOrg).to.have.property(\"status\");\r",
											"        pm.expect(firstOrg).to.have.property(\"type\");\r",
											"\r",
											"        let innerOrg = firstOrg.org;\r",
											"        pm.expect(innerOrg).to.have.property(\"_id\");\r",
											"        pm.expect(innerOrg).to.have.property(\"name\");\r",
											"        pm.expect(innerOrg).to.have.property(\"phone\");\r",
											"\r",
											"        pm.expect(typeof firstOrg.status).to.eql(\"string\");\r",
											"        pm.expect(typeof firstOrg.type).to.eql(\"string\");\r",
											"        pm.expect(typeof innerOrg._id).to.eql(\"string\");\r",
											"        pm.expect(typeof innerOrg.name).to.eql(\"string\");\r",
											"        pm.expect(typeof innerOrg.phone).to.eql(\"string\");\r",
											"\r",
											"        if (innerOrg.email !== undefined) {\r",
											"            pm.expect(typeof innerOrg.email).to.eql(\"string\");\r",
											"        }\r",
											"    });\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "user-agent",
										"value": "Opera/9.49 (Macintosh; Intel Mac OS X 10.9.3 U; NE Presto/2.9.189 Version/12.00)"
									},
									{
										"key": "__utc_offset_minute",
										"value": ""
									},
									{
										"key": "x-custom-lang",
										"value": "en"
									},
									{
										"key": "x-timestamp",
										"value": "1749865689098"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY3ODg2YWU2YmVjODJmZWMzOTZkZDZiNiIsImZ1bGxOYW1lIjoiYmliZWthbmFuZCBrdXNod2FoYSIsIm1vYmlsZU51bWJlciI6Ijk4MDU2NzU1ODAiLCJlbWFpbCI6ImJpYmVrYW5hbmRAa3VzaGZpbnRlY2guY29tIiwidHlwZSI6IkFETUlOX1NUQUZGIiwiY29kZSI6IlFQUlVXVUNBIiwic2VydmljZVR5cGUiOiJBRE1JTiJ9LCJpYXQiOjE3NTAwNDYwMTgsIm5iZiI6MTc1MDA0NjAxOCwiZXhwIjoxNzUwMDc0ODE4LCJhdWQiOiJodHRwczovL2V4YW1wbGUuY29tIiwiaXNzIjoiZ21nIiwic3ViIjoiR01HRGV2ZWxvcG1lbnQifQ.Pt6AWouik43nNfejy4SuUF8gUVtRfXtuobTLCGhxM1E"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/admin/operator/list/staff",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"operator",
										"list",
										"staff"
									],
									"query": [
										{
											"key": "perPage",
											"value": "20",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "orderBy",
											"value": "createdAt",
											"disabled": true
										}
									]
								},
								"description": "Generated from cURL: curl -X 'GET' \\\r\n  'https://stg.api.gomygo.com/api/v1/admin/operator/list/staff?perPage=20&page=1&orderBy=createdAt' \\\r\n  -H 'accept: application/json' \\\r\n  -H 'user-agent: Opera/9.49 (Macintosh; Intel Mac OS X 10.9.3 U; NE Presto/2.9.189 Version/12.00)' \\\r\n  -H __utc_offset_minute: -345 \\\r\n  -H 'x-custom-lang: en' \\\r\n  -H 'x-timestamp: 1749865689098' \\\r\n  -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY3ODg2YWU2YmVjODJmZWMzOTZkZDZiNiIsImZ1bGxOYW1lIjoiYmliZWthbmFuZCBrdXNod2FoYSIsIm1vYmlsZU51bWJlciI6Ijk4MDU2NzU1ODAiLCJlbWFpbCI6ImJpYmVrYW5hbmRAa3VzaGZpbnRlY2guY29tIiwidHlwZSI6IkFETUlOX1NUQUZGIiwiY29kZSI6IlFQUlVXVUNBIiwic2VydmljZVR5cGUiOiJBRE1JTiJ9LCJpYXQiOjE3NTAwNDYwMTgsIm5iZiI6MTc1MDA0NjAxOCwiZXhwIjoxNzUwMDc0ODE4LCJhdWQiOiJodHRwczovL2V4YW1wbGUuY29tIiwiaXNzIjoiZ21nIiwic3ViIjoiR01HRGV2ZWxvcG1lbnQifQ.Pt6AWouik43nNfejy4SuUF8gUVtRfXtuobTLCGhxM1E'"
							},
							"response": []
						}
					]
				},
				{
					"name": "Bookings List",
					"item": [
						{
							"name": "Booking Admin Controller V2 list Booking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\",function(){\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"});  \r",
											"\r",
											"let response = pm.response.json();\r",
											"\r",
											"pm.test(\"There is atleast One bookings\", function() {\r",
											"    pm.expect(response.data).to.be.an(\"array\").that.is.not.empty;\r",
											"})\r",
											"\r",
											"let booking = response.data[0];\r",
											"\r",
											"pm.test(\"It has all the required keys\", function() {\r",
											"    const requiredkeys = [\"_id\", \"vehicle\", \"vehicleName\", \"vehicleNumber\", \"trip\", \"pickUp\", \"dropOff\", \"bookedFor\", \"bookedBy\", \"paymentBreakdown\", \"passengerContactPerson\", \"seats\", \"shortId\", \"operatorContacts\", \"status\", \"sessionId\", \"leadId\", \"fullFare\", \"totalAmount\", \"canceledAmount\", \"currency\", \"discount\", \"paymentStatus\", \"isRefundable\", \"isActive\", \"transaction\", \"isSmsSent\", \"createdAt\", \"updatedAt\", \"jobId\"];\r",
											"    \r",
											"    requiredkeys.forEach(key => { pm.expect(booking).to.have.property(key) });  \r",
											"})\r",
											"\r",
											"pm.test(\"Booking list meets all the keys with correct types \", function() {\r",
											"    // Type checks based on sample\r",
											"    pm.expect(booking._id).to.be.a(\"string\");\r",
											"    pm.expect(booking.vehicle).to.be.an(\"object\");\r",
											"    pm.expect(booking.vehicleName).to.be.a(\"string\");\r",
											"    pm.expect(booking.vehicleNumber).to.be.a(\"string\");\r",
											"    pm.expect(booking.trip).to.be.an(\"object\");\r",
											"    pm.expect(booking.pickUp).to.be.an(\"object\");\r",
											"    pm.expect(booking.dropOff).to.be.an(\"object\");\r",
											"    pm.expect(booking.bookedFor).to.be.an(\"object\");\r",
											"    pm.expect(booking.bookedBy).to.be.an(\"object\");\r",
											"    pm.expect(booking.paymentBreakdown).to.be.an(\"object\");\r",
											"    pm.expect(booking.passengerContactPerson).to.be.an(\"object\");\r",
											"    pm.expect(booking.seats).to.be.an(\"array\");\r",
											"    pm.expect(booking.shortId).to.be.a(\"string\");\r",
											"    pm.expect(booking.operatorContacts).to.be.an(\"array\");\r",
											"    pm.expect(booking.status).to.be.a(\"string\");\r",
											"    pm.expect(booking.sessionId).to.be.a(\"string\");\r",
											"    pm.expect(booking.leadId == null || typeof booking.leadId === \"string\").to.be.true;\r",
											"    pm.expect(booking.fullFare).to.be.a(\"number\");\r",
											"    pm.expect(booking.totalAmount).to.be.a(\"number\");\r",
											"    pm.expect(booking.canceledAmount).to.be.a(\"number\");\r",
											"    pm.expect(booking.currency).to.be.a(\"string\");\r",
											"    pm.expect(booking.discount).to.be.a(\"number\");\r",
											"    pm.expect(booking.paymentStatus).to.be.a(\"string\");\r",
											"    pm.expect(booking.isRefundable).to.be.a(\"boolean\");\r",
											"    pm.expect(booking.isActive).to.be.a(\"boolean\");\r",
											"    pm.expect(booking.transaction == null || typeof booking.transaction == \"object\").to.be.true;\r",
											"    pm.expect(booking.isSmsSent).to.be.a(\"boolean\");\r",
											"    pm.expect(booking.createdAt).to.be.a(\"string\");\r",
											"    pm.expect(booking.updatedAt).to.be.a(\"string\");\r",
											"    pm.expect(booking.jobId).to.be.a(\"string\");\r",
											"})\r",
											"\r",
											"pm.test(\"it has all the trip keys\",function(){\r",
											"    const tripkeys = booking.trip;\r",
											"\r",
											"    const trip = [\"tripId\",\"from\",\"to\",\"startTime\",\"reachTime\",\"org\",\"orgCode\",\"serviceId\",\"apiProvider\",\"isExternal\"]\r",
											"\r",
											"    trip.forEach(key=>{pm.expect(tripkeys).to.have.property(key)});\r",
											"});\r",
											"\r",
											"//VEHICLE ARRAY CHECK\r",
											"pm.test(\"It has all the vehicle keys\", function() {\r",
											"    const bookingvehicle = booking.vehicle;\r",
											"\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"_id\").that.is.a(\"string\");\r",
											"\t// pm.expect(bookingvehicle).to.have.property(\"type\").that.is.a(\"string\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"org\").that.is.a(\"string\");\r",
											"\tpm.expect(bookingvehicle.model == null || typeof bookingvehicle.model == \"string\" ).to.be.true;\r",
											"\tpm.expect(bookingvehicle.makeYear == null || typeof bookingvehicle.makeYear == \"string\").to.be.true;\r",
											"\tpm.expect(bookingvehicle.purchasedYear == null || bookingvehicle.purchasedYear == \"string\").to.be.true;\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"name\").that.is.a(\"string\");\r",
											"\t// pm.expect(bookingvehicle).to.have.property(\"description\").that.is.a(\"string\");\r",
											"\tpm.expect(bookingvehicle,\"Number Plate error\").to.have.property(\"numberPlate\").that.is.a(\"string\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"profile\").that.is.a(\"object\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"isActive\").that.is.a(\"boolean\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"status\").that.is.a(\"string\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"staff\").that.is.a(\"array\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"photos\").that.is.a(\"array\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"createdAt\").that.is.a(\"string\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"updatedAt\").that.is.a(\"string\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"configs\").that.is.a(\"array\");\r",
											"    \r",
											"});\r",
											"\r",
											"//pickup and drop off\r",
											"pm.test(\"It has pick up and drop off key\", function() {\r",
											"    const pickup = booking.pickUp;\r",
											"\r",
											"    pm.expect(pickup).to.have.property(\"name\");\r",
											"    pm.expect(pickup).to.have.property(\"time\");\r",
											"\r",
											"    pm.expect(booking.dropOff).to.have.property(\"name\");\r",
											"    pm.expect(booking.dropOff).to.have.property(\"time\");\r",
											"})\r",
											"\r",
											"pm.test(\"It has all thebookedFor keys\",function(){\r",
											"    pm.expect(booking.bookedFor).to.have.property(\"code\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedFor).to.have.property(\"_id\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedFor).to.have.property(\"fullName\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedFor).to.have.property(\"org\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedFor).to.have.property(\"email\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedFor).to.have.property(\"mobileNumber\").that.is.a(\"string\");\r",
											"})\r",
											"\r",
											"pm.test(\"It has all bookedBy keys\",function(){\r",
											"    pm.expect(booking.bookedBy).to.have.property(\"channel\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedBy).to.have.property(\"code\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedBy).to.have.property(\"type\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedBy).to.have.property(\"_id\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedBy).to.have.property(\"fullName\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedBy).to.have.property(\"org\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedBy).to.have.property(\"email\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedBy).to.have.property(\"mobileNumber\").that.is.a(\"string\");\r",
											"})\r",
											"\r",
											"pm.test(\"It has all the paymentBreakdown Keys\",function(){\r",
											"\r",
											"pm.expect(booking.paymentBreakdown).to.have.property(\"gomygo\").that.is.an(\"object\");\r",
											"\r",
											"\tpm.expect(booking.paymentBreakdown.gomygo).to.have.property(\"notionalBalanceUsed\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.gomygo).to.have.property(\"notionalCashbackRewarded\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.gomygo).to.have.property(\"realBalanceUsed\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.gomygo).to.have.property(\"realCashbackRewarded\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.gomygo).to.have.property(\"remainingAmount\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.gomygo).to.have.property(\"totalAmount\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.gomygo).to.have.property(\"paidAmount\").that.is.a(\"number\");\r",
											"\r",
											"pm.expect(booking.paymentBreakdown).to.have.property(\"customer\").that.is.an(\"object\");\r",
											"\r",
											"\tpm.expect(booking.paymentBreakdown.customer).to.have.property(\"notionalBalanceUsed\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.customer).to.have.property(\"notionalCashbackRewarded\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.customer).to.have.property(\"realBalanceUsed\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.customer).to.have.property(\"realCashbackRewarded\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.customer).to.have.property(\"remainingAmount\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.customer).to.have.property(\"totalAmount\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.customer).to.have.property(\"paidAmount\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.customer).to.have.property(\"remAmountCollector\").that.is.a(\"string\");\t\r",
											"\r",
											"pm.expect(booking.paymentBreakdown).to.have.property(\"operator\").that.is.an(\"object\");\r",
											"\r",
											"\tpm.expect(booking.paymentBreakdown.operator).to.have.property(\"notionalBalanceUsed\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.operator).to.have.property(\"notionalCashbackRewarded\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.operator).to.have.property(\"realBalanceUsed\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.operator).to.have.property(\"realCashbackRewarded\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.operator).to.have.property(\"remainingAmount\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.operator).to.have.property(\"totalAmount\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.operator).to.have.property(\"paidAmount\").that.is.a(\"number\");\r",
											"\r",
											"});\r",
											"\r",
											"pm.test(\"It has all the passengerContactPerson Keys\",function(){\r",
											"\r",
											"pm.expect(booking.passengerContactPerson).to.have.property(\"fullName\").that.is.an(\"string\");\r",
											"pm.expect(booking.passengerContactPerson).to.have.property(\"mobileNumber\").that.is.an(\"string\");\r",
											"pm.expect(booking.passengerContactPerson).to.have.property(\"countryCode\").that.is.an(\"string\");\r",
											"\r",
											"});\r",
											"\r",
											"pm.test(\"It has all the seats Keys\",function(){\r",
											"\r",
											"pm.expect(booking.seats).to.be.an(\"array\");\r",
											"\r",
											"const firstseat = booking.seats[0];\r",
											"\r",
											"\tpm.expect(firstseat).to.have.property(\"number\").that.is.a(\"string\");\r",
											"\tpm.expect(firstseat).to.have.property(\"price\").that.is.a(\"number\");\r",
											"\tpm.expect(firstseat).to.have.property(\"status\").that.is.a(\"string\");\r",
											"\tpm.expect(firstseat).to.have.property(\"ticket\").that.is.a(\"string\");\r",
											"    if (firstseat.hasOwnProperty(\"passenger\")) {\r",
											"        pm.expect(firstseat.passenger).to.be.an(\"object\");\r",
											"    }\r",
											"// \tif (firstseat.hasOwnProperty(\"passenger\")) {\r",
											"//     pm.expect(firstseat.passenger).to.be.a(\"string\");\r",
											"// }\r",
											"\tpm.expect(firstseat).to.have.property(\"discount\").that.is.a(\"number\");\r",
											"\tpm.expect(firstseat).to.have.property(\"variant\").that.is.a(\"string\");\r",
											"\tpm.expect(firstseat).to.have.property(\"serviceCharge\").that.is.a(\"number\");\r",
											"\r",
											"});\r",
											"\r",
											"\r",
											"if (booking.operatorContacts.length > 0) {\r",
											"\r",
											"pm.test(\"It has all the operatorContacts Keys\",function(){\r",
											"\r",
											"const fristoperator = booking.operatorContacts[0];\r",
											"\r",
											"pm.expect(fristoperator).to.have.property(\"fullName\").that.is.an(\"string\");\r",
											"pm.expect(fristoperator).to.have.property(\"mobileNumber\").that.is.an(\"string\");\r",
											"pm.expect(fristoperator).to.have.property(\"countryCode\").that.is.an(\"string\");\r",
											"pm.expect(fristoperator).to.have.property(\"type\").that.is.an(\"string\");\r",
											"pm.expect(fristoperator).to.have.property(\"_id\").that.is.an(\"string\");\r",
											"\r",
											"});\r",
											"}\r",
											"\r",
											"pm.environment.set(\"bookingid\",booking._id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/admin/booking/list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"admin",
										"booking",
										"list"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/admin/booking/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"admin",
												"booking",
												"list"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Booking{get}",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();\r",
											"let booking = response.data;\r",
											"\r",
											"pm.test(\"It has all the required keys\", function() {\r",
											"    const requiredkeys = [\"_id\", \"vehicle\", \"vehicleName\", \"vehicleNumber\", \"trip\", \"pickUp\", \"dropOff\", \"bookedFor\", \"bookedBy\", \"paymentBreakdown\", \"passengerContactPerson\", \"seats\", \"shortId\", \"operatorContacts\", \"status\", \"sessionId\", \"leadId\", \"fullFare\", \"totalAmount\", \"canceledAmount\", \"currency\", \"discount\", \"paymentStatus\", \"isRefundable\", \"isActive\", \"transaction\", \"isSmsSent\", \"createdAt\", \"updatedAt\", \"jobId\"];\r",
											"    \r",
											"    requiredkeys.forEach(key => { pm.expect(booking).to.have.property(key) });\r",
											"})\r",
											"\r",
											"pm.test(\"Booking list meets all the keys with correct types \", function() {\r",
											"    // Type checks based on sample\r",
											"    pm.expect(booking._id).to.be.a(\"string\");\r",
											"    pm.expect(booking.vehicle).to.be.an(\"object\");\r",
											"    pm.expect(booking.vehicleName).to.be.a(\"string\");\r",
											"    pm.expect(booking.vehicleNumber).to.be.a(\"string\");\r",
											"    pm.expect(booking.trip).to.be.an(\"object\");\r",
											"    pm.expect(booking.pickUp).to.be.an(\"object\");\r",
											"    pm.expect(booking.dropOff).to.be.an(\"object\");\r",
											"    pm.expect(booking.bookedFor).to.be.an(\"object\");\r",
											"    pm.expect(booking.bookedBy).to.be.an(\"object\");\r",
											"    pm.expect(booking.paymentBreakdown).to.be.an(\"object\");\r",
											"    pm.expect(booking.passengerContactPerson).to.be.an(\"object\");\r",
											"    pm.expect(booking.seats).to.be.an(\"array\");\r",
											"    pm.expect(booking.shortId).to.be.a(\"string\");\r",
											"    pm.expect(booking.operatorContacts).to.be.an(\"array\");\r",
											"    pm.expect(booking.status).to.be.a(\"string\");\r",
											"    pm.expect(booking.sessionId).to.be.a(\"string\");\r",
											"    pm.expect(booking.leadId == null || typeof booking.leadId === \"string\").to.be.true;\r",
											"    pm.expect(booking.fullFare).to.be.a(\"number\");\r",
											"    pm.expect(booking.totalAmount).to.be.a(\"number\");\r",
											"    pm.expect(booking.canceledAmount).to.be.a(\"number\");\r",
											"    pm.expect(booking.currency).to.be.a(\"string\");\r",
											"    pm.expect(booking.discount).to.be.a(\"number\");\r",
											"    pm.expect(booking.paymentStatus).to.be.a(\"string\");\r",
											"    pm.expect(booking.isRefundable).to.be.a(\"boolean\");\r",
											"    pm.expect(booking.isActive).to.be.a(\"boolean\");\r",
											"    pm.expect(booking.transaction == null || typeof booking.transaction == \"object\").to.be.true;\r",
											"    pm.expect(booking.isSmsSent).to.be.a(\"boolean\");\r",
											"    pm.expect(booking.createdAt).to.be.a(\"string\");\r",
											"    pm.expect(booking.updatedAt).to.be.a(\"string\");\r",
											"    pm.expect(booking.jobId).to.be.a(\"string\");\r",
											"})\r",
											"\r",
											"pm.test(\"it has all the trip keys\",function(){\r",
											"    const tripkeys = booking.trip;\r",
											"\r",
											"    const trip = [\"tripId\",\"from\",\"to\",\"startTime\",\"reachTime\",\"org\",\"serviceId\",\"apiProvider\",\"isExternal\"]\r",
											"\r",
											"    trip.forEach(key=>{pm.expect(tripkeys).to.have.property(key)});\r",
											"});\r",
											"\r",
											"//VEHICLE ARRAY CHECK\r",
											"pm.test(\"It has all the vehicle keys\", function() {\r",
											"    const bookingvehicle = booking.vehicle;\r",
											"\r",
											"\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"_id\").that.is.a(\"string\");\r",
											"\t// pm.expect(bookingvehicle).to.have.property(\"type\").that.is.a(\"string\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"org\").that.is.a(\"string\");\r",
											"\tpm.expect(bookingvehicle.model == null || typeof bookingvehicle.model == \"string\" ).to.be.true;\r",
											"\tpm.expect(bookingvehicle.makeYear == null || typeof bookingvehicle.makeYear == \"string\").to.be.true;\r",
											"\tpm.expect(bookingvehicle.purchasedYear == null || bookingvehicle.purchasedYear == \"string\").to.be.true;\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"name\").that.is.a(\"string\");\r",
											"\t// pm.expect(bookingvehicle).to.have.property(\"description\").that.is.a(\"string\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"numberPlate\").that.is.a(\"string\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"profile\").that.is.a(\"object\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"isActive\").that.is.a(\"boolean\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"status\").that.is.a(\"string\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"staff\").that.is.a(\"array\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"photos\").that.is.a(\"array\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"createdAt\").that.is.a(\"string\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"updatedAt\").that.is.a(\"string\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"configs\").that.is.a(\"array\");\r",
											"    \r",
											"});\r",
											"\r",
											"//pickup and drop off\r",
											"pm.test(\"It has pick up and drop off key\", function() {\r",
											"    const pickup = booking.pickUp;\r",
											"\r",
											"    pm.expect(pickup).to.have.property(\"name\");\r",
											"    pm.expect(pickup).to.have.property(\"time\");\r",
											"\r",
											"    pm.expect(booking.dropOff).to.have.property(\"name\");\r",
											"    pm.expect(booking.dropOff).to.have.property(\"time\");\r",
											"})\r",
											"\r",
											"pm.test(\"It has all thebookedFor keys\",function(){\r",
											"    pm.expect(booking.bookedFor).to.have.property(\"code\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedFor).to.have.property(\"_id\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedFor).to.have.property(\"fullName\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedFor).to.have.property(\"org\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedFor).to.have.property(\"email\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedFor).to.have.property(\"mobileNumber\").that.is.a(\"string\");\r",
											"})\r",
											"\r",
											"pm.test(\"It has all bookedBy keys\",function(){\r",
											"    pm.expect(booking.bookedBy).to.have.property(\"channel\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedBy).to.have.property(\"code\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedBy).to.have.property(\"type\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedBy).to.have.property(\"_id\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedBy).to.have.property(\"fullName\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedBy).to.have.property(\"org\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedBy).to.have.property(\"email\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedBy).to.have.property(\"mobileNumber\").that.is.a(\"string\");\r",
											"})\r",
											"\r",
											"pm.test(\"It has all the paymentBreakdown Keys\",function(){\r",
											"\r",
											"pm.expect(booking.paymentBreakdown).to.have.property(\"gomygo\").that.is.an(\"object\");\r",
											"\r",
											"\tpm.expect(booking.paymentBreakdown.gomygo).to.have.property(\"notionalBalanceUsed\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.gomygo).to.have.property(\"notionalCashbackRewarded\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.gomygo).to.have.property(\"realBalanceUsed\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.gomygo).to.have.property(\"realCashbackRewarded\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.gomygo).to.have.property(\"remainingAmount\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.gomygo).to.have.property(\"totalAmount\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.gomygo).to.have.property(\"paidAmount\").that.is.a(\"number\");\r",
											"\r",
											"pm.expect(booking.paymentBreakdown).to.have.property(\"customer\").that.is.an(\"object\");\r",
											"\r",
											"\tpm.expect(booking.paymentBreakdown.customer).to.have.property(\"notionalBalanceUsed\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.customer).to.have.property(\"notionalCashbackRewarded\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.customer).to.have.property(\"realBalanceUsed\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.customer).to.have.property(\"realCashbackRewarded\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.customer).to.have.property(\"remainingAmount\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.customer).to.have.property(\"totalAmount\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.customer).to.have.property(\"paidAmount\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.customer).to.have.property(\"remAmountCollector\").that.is.a(\"string\");\t\r",
											"\r",
											"pm.expect(booking.paymentBreakdown).to.have.property(\"operator\").that.is.an(\"object\");\r",
											"\r",
											"\tpm.expect(booking.paymentBreakdown.operator).to.have.property(\"notionalBalanceUsed\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.operator).to.have.property(\"notionalCashbackRewarded\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.operator).to.have.property(\"realBalanceUsed\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.operator).to.have.property(\"realCashbackRewarded\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.operator).to.have.property(\"remainingAmount\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.operator).to.have.property(\"totalAmount\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.operator).to.have.property(\"paidAmount\").that.is.a(\"number\");\r",
											"\r",
											"});\r",
											"\r",
											"pm.test(\"It has all the passengerContactPerson Keys\",function(){\r",
											"\r",
											"pm.expect(booking.passengerContactPerson).to.have.property(\"fullName\").that.is.an(\"string\");\r",
											"pm.expect(booking.passengerContactPerson).to.have.property(\"mobileNumber\").that.is.an(\"string\");\r",
											"pm.expect(booking.passengerContactPerson).to.have.property(\"countryCode\").that.is.an(\"string\");\r",
											"\r",
											"});\r",
											"\r",
											"pm.test(\"It has all the seats Keys\",function(){\r",
											"\r",
											"pm.expect(booking.seats).to.be.an(\"array\");\r",
											"\r",
											"const firstseat = booking.seats[0];\r",
											"\r",
											"\tpm.expect(firstseat).to.have.property(\"number\").that.is.a(\"string\");\r",
											"\tpm.expect(firstseat).to.have.property(\"price\").that.is.a(\"number\");\r",
											"\tpm.expect(firstseat).to.have.property(\"status\").that.is.a(\"string\");\r",
											"\tpm.expect(firstseat).to.have.property(\"ticket\").that.is.a(\"string\");\r",
											"    if (firstseat.hasOwnProperty(\"passenger\")) {\r",
											"        pm.expect(firstseat.passenger).to.be.an(\"object\");\r",
											"    }\r",
											"\tif (firstseat.hasOwnProperty(\"passenger\")) {\r",
											"    pm.expect(firstseat.passenger).to.be.a(\"string\");\r",
											"}\r",
											"\tpm.expect(firstseat).to.have.property(\"discount\").that.is.a(\"number\");\r",
											"\tpm.expect(firstseat).to.have.property(\"variant\").that.is.a(\"string\");\r",
											"\tpm.expect(firstseat).to.have.property(\"serviceCharge\").that.is.a(\"number\");\r",
											"\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"It has all the operatorContacts Keys\",function(){\r",
											"\r",
											"const fristoperator = booking.operatorContacts[0];\r",
											"\r",
											"pm.expect(fristoperator).to.have.property(\"fullName\").that.is.an(\"string\");\r",
											"pm.expect(fristoperator).to.have.property(\"mobileNumber\").that.is.an(\"string\");\r",
											"pm.expect(fristoperator).to.have.property(\"countryCode\").that.is.an(\"string\");\r",
											"pm.expect(fristoperator).to.have.property(\"type\").that.is.an(\"string\");\r",
											"pm.expect(fristoperator).to.have.property(\"_id\").that.is.an(\"string\");\r",
											"\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY3ODg2YWU2YmVjODJmZWMzOTZkZDZiNiIsImZ1bGxOYW1lIjoiYmliZWthbmFuZCBrdXNod2FoYSIsIm1vYmlsZU51bWJlciI6Ijk4MDU2NzU1ODAiLCJlbWFpbCI6ImJpYmVrYW5hbmRAa3VzaGZpbnRlY2guY29tIiwidHlwZSI6IkFETUlOX1NUQUZGIiwiY29kZSI6IlFQUlVXVUNBIiwic2VydmljZVR5cGUiOiJBRE1JTiJ9LCJpYXQiOjE3NTAxMzg3NTIsIm5iZiI6MTc1MDEzODc1MiwiZXhwIjoxNzUwMTY3NTUyLCJhdWQiOiJodHRwczovL2V4YW1wbGUuY29tIiwiaXNzIjoiZ21nIiwic3ViIjoiR01HRGV2ZWxvcG1lbnQifQ.Hc9Hi0yccryXoRK-NFtQqFwumJl2WCxtl2D4gvDApRo",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/admin/booking/:booking",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"admin",
										"booking",
										":booking"
									],
									"variable": [
										{
											"key": "booking",
											"value": "{{bookingid}}"
										}
									]
								},
								"description": "Generated from cURL: curl -X 'GET' \\\r\n  'https://stg.api.gomygo.com/api/v2/admin/booking/bd496cb28ec107f12d44f2ee' \\\r\n  -H 'accept: */*' \\\r\n  -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY3ODg2YWU2YmVjODJmZWMzOTZkZDZiNiIsImZ1bGxOYW1lIjoiYmliZWthbmFuZCBrdXNod2FoYSIsIm1vYmlsZU51bWJlciI6Ijk4MDU2NzU1ODAiLCJlbWFpbCI6ImJpYmVrYW5hbmRAa3VzaGZpbnRlY2guY29tIiwidHlwZSI6IkFETUlOX1NUQUZGIiwiY29kZSI6IlFQUlVXVUNBIiwic2VydmljZVR5cGUiOiJBRE1JTiJ9LCJpYXQiOjE3NTAxMzg3NTIsIm5iZiI6MTc1MDEzODc1MiwiZXhwIjoxNzUwMTY3NTUyLCJhdWQiOiJodHRwczovL2V4YW1wbGUuY29tIiwiaXNzIjoiZ21nIiwic3ViIjoiR01HRGV2ZWxvcG1lbnQifQ.Hc9Hi0yccryXoRK-NFtQqFwumJl2WCxtl2D4gvDApRo'"
							},
							"response": []
						}
					]
				},
				{
					"name": "Leads Management",
					"item": [
						{
							"name": "Leads",
							"item": [
								{
									"name": "New Request",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY4NDMxMjQ3ZWZhMTdjYWYzMmY3N2Q2OCIsImZ1bGxOYW1lIjoia2F0aG1hbmR1IGluY2hhcmdlIiwibW9iaWxlTnVtYmVyIjoiOTgwNjU0ODY1NCIsImVtYWlsIjoicHVuczE0OThAZ21haWwuY29tIiwidHlwZSI6IlNVUEVSX0FETUlOIiwib3JnIjoiNjg0MzEyNDdlZmExN2NhZjMyZjc3ZDY4IiwiY29kZSI6IldUVlVDVVBTIiwic2VydmljZVR5cGUiOiJPUEVSQVRPUiJ9LCJpYXQiOjE3NTA2OTI3ODAsIm5iZiI6MTc1MDY5Mjc4MCwiZXhwIjoxNzUwNzIxNTgwLCJhdWQiOiJodHRwczovL2V4YW1wbGUuY29tIiwiaXNzIjoiZ21nIiwic3ViIjoiR01HRGV2ZWxvcG1lbnQifQ.G8z2c5Uuw1jTijnPbe2Md8RWzrL2fb2d-wl9X9k5sfQ",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "x-api-key",
												"value": "{{API-KEY}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"trip\": [\n     \"6847c0ef2504b4b872fbc23a\",\n    \"6847c0ef2504b4b872fbc23c\",\n    \"6847c0ef2504b4b872fbc23e\",\n    \"6847c0ef2504b4b872fbc240\",\n    \"6847c0ef2504b4b872fbc242\",\n    \"6847c0ef2504b4b872fbc244\",\n    \"6847c0ef2504b4b872fbc246\",\n    \"6847c0ef2504b4b872fbc248\"\n  ],\n  \"isAll\": false,\n  \"templateId\": \"68433fbfefa17caf32f78fd6\",\n  \"contactPerson\": [\n    {\n      \"user\": \"68431247efa17caf32f77d68\",\n      \"email\": true,\n      \"whatsApp\": true,\n      \"sms\": true\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/org/bulk/update/live-trip/staff",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"org",
												"bulk",
												"update",
												"live-trip",
												"staff"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Leads Stage",
							"item": [
								{
									"name": "Create Lead Stage",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY3ODg2YWU2YmVjODJmZWMzOTZkZDZiNiIsImZ1bGxOYW1lIjoiYmliZWthbmFuZCBrdXNod2FoYSIsIm1vYmlsZU51bWJlciI6Ijk4MDU2NzU1ODAiLCJlbWFpbCI6ImJpYmVrYW5hbmRAa3VzaGZpbnRlY2guY29tIiwidHlwZSI6IkFETUlOX1NUQUZGIiwiY29kZSI6IlFQUlVXVUNBIiwic2VydmljZVR5cGUiOiJBRE1JTiJ9LCJpYXQiOjE3NTA3NTExNTUsIm5iZiI6MTc1MDc1MTE1NSwiZXhwIjoxNzUzMzQzMTU1LCJhdWQiOiJodHRwczovL2V4YW1wbGUuY29tIiwiaXNzIjoic3VwZXItYWRtaW5zIiwic3ViIjoiR01HRGV2ZWxvcG1lbnQifQ.eSgh0G_bXMPs3KrRB8QiFmRktUFFTnVvi9bxLEgEink",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "x-api-key",
												"value": "{{API-KEY}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"enquiry\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/leads-stage/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"leads-stage",
												"create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Stage Lists",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY3ODg2YWU2YmVjODJmZWMzOTZkZDZiNiIsImZ1bGxOYW1lIjoiYmliZWthbmFuZCBrdXNod2FoYSIsIm1vYmlsZU51bWJlciI6Ijk4MDU2NzU1ODAiLCJlbWFpbCI6ImJpYmVrYW5hbmRAa3VzaGZpbnRlY2guY29tIiwidHlwZSI6IkFETUlOX1NUQUZGIiwiY29kZSI6IlFQUlVXVUNBIiwic2VydmljZVR5cGUiOiJBRE1JTiJ9LCJpYXQiOjE3NTA3NTExNTUsIm5iZiI6MTc1MDc1MTE1NSwiZXhwIjoxNzUzMzQzMTU1LCJhdWQiOiJodHRwczovL2V4YW1wbGUuY29tIiwiaXNzIjoic3VwZXItYWRtaW5zIiwic3ViIjoiR01HRGV2ZWxvcG1lbnQifQ.eSgh0G_bXMPs3KrRB8QiFmRktUFFTnVvi9bxLEgEink",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "x-api-key",
												"value": "{{API-KEY}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"enquiry\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/leads-stage/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"leads-stage",
												"list"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Lead Stage",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY3ODg2YWU2YmVjODJmZWMzOTZkZDZiNiIsImZ1bGxOYW1lIjoiYmliZWthbmFuZCBrdXNod2FoYSIsIm1vYmlsZU51bWJlciI6Ijk4MDU2NzU1ODAiLCJlbWFpbCI6ImJpYmVrYW5hbmRAa3VzaGZpbnRlY2guY29tIiwidHlwZSI6IkFETUlOX1NUQUZGIiwiY29kZSI6IlFQUlVXVUNBIiwic2VydmljZVR5cGUiOiJBRE1JTiJ9LCJpYXQiOjE3NTA3NTExNTUsIm5iZiI6MTc1MDc1MTE1NSwiZXhwIjoxNzUzMzQzMTU1LCJhdWQiOiJodHRwczovL2V4YW1wbGUuY29tIiwiaXNzIjoic3VwZXItYWRtaW5zIiwic3ViIjoiR01HRGV2ZWxvcG1lbnQifQ.eSgh0G_bXMPs3KrRB8QiFmRktUFFTnVvi9bxLEgEink",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "x-api-key",
												"value": "{{API-KEY}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"enquiry\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/leads-stage/update/67886ae6bec82fec396dd6b6",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"leads-stage",
												"update",
												"67886ae6bec82fec396dd6b6"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Leads funnel",
							"item": [
								{
									"name": "Create Lead Funnel",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY3ODg2YWU2YmVjODJmZWMzOTZkZDZiNiIsImZ1bGxOYW1lIjoiYmliZWthbmFuZCBrdXNod2FoYSIsIm1vYmlsZU51bWJlciI6Ijk4MDU2NzU1ODAiLCJlbWFpbCI6ImJpYmVrYW5hbmRAa3VzaGZpbnRlY2guY29tIiwidHlwZSI6IkFETUlOX1NUQUZGIiwiY29kZSI6IlFQUlVXVUNBIiwic2VydmljZVR5cGUiOiJBRE1JTiJ9LCJpYXQiOjE3NTA3NTExNTUsIm5iZiI6MTc1MDc1MTE1NSwiZXhwIjoxNzUzMzQzMTU1LCJhdWQiOiJodHRwczovL2V4YW1wbGUuY29tIiwiaXNzIjoic3VwZXItYWRtaW5zIiwic3ViIjoiR01HRGV2ZWxvcG1lbnQifQ.eSgh0G_bXMPs3KrRB8QiFmRktUFFTnVvi9bxLEgEink",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "x-api-key",
												"value": "{{API-KEY}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"enquiry\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/leads-stage/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"leads-stage",
												"create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Funnel Lists",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY3ODg2YWU2YmVjODJmZWMzOTZkZDZiNiIsImZ1bGxOYW1lIjoiYmliZWthbmFuZCBrdXNod2FoYSIsIm1vYmlsZU51bWJlciI6Ijk4MDU2NzU1ODAiLCJlbWFpbCI6ImJpYmVrYW5hbmRAa3VzaGZpbnRlY2guY29tIiwidHlwZSI6IkFETUlOX1NUQUZGIiwiY29kZSI6IlFQUlVXVUNBIiwic2VydmljZVR5cGUiOiJBRE1JTiJ9LCJpYXQiOjE3NTA3NTExNTUsIm5iZiI6MTc1MDc1MTE1NSwiZXhwIjoxNzUzMzQzMTU1LCJhdWQiOiJodHRwczovL2V4YW1wbGUuY29tIiwiaXNzIjoic3VwZXItYWRtaW5zIiwic3ViIjoiR01HRGV2ZWxvcG1lbnQifQ.eSgh0G_bXMPs3KrRB8QiFmRktUFFTnVvi9bxLEgEink",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "x-api-key",
												"value": "{{API-KEY}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"enquiry\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/leads-stage/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"leads-stage",
												"list"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "OrG",
					"item": [
						{
							"name": "org.user.list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const data = pm.response.json().data;\r",
											"\r",
											"pm.test(\"Each data has a code property\", function () {\r",
											"    data.forEach(function (item, index) {\r",
											"        pm.expect(item, `Missing 'code' at index ${index}`).to.have.property(\"code\");\r",
											"        pm.expect(item.code, `'code' is not a string at index ${index}`).to.be.a(\"string\");\r",
											"    });\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "user-agent",
										"value": "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_7_6 rv:3.0; TK) AppleWebKit/535.1.1 (KHTML, like Gecko) Version/4.1.8 Safari/535.1.1",
										"description": "User agent header"
									},
									{
										"key": "__utc_offset_minute",
										"value": "-345",
										"description": "utc offset minute, `new Date().getTimezoneOffset()`"
									},
									{
										"key": "x-custom-lang",
										"value": "en",
										"description": "Custom language header"
									},
									{
										"key": "x-timestamp",
										"value": "1751557249011",
										"description": "Timestamp header, in microseconds"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/admin/org/list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"org",
										"list"
									],
									"query": [
										{
											"key": "isActive",
											"value": "true,false",
											"description": "boolean value with ',' delimiter",
											"disabled": true
										},
										{
											"key": "blocked",
											"value": "true",
											"description": "boolean value with ',' delimiter",
											"disabled": true
										},
										{
											"key": "kycStatus",
											"value": "BASIC",
											"description": "ENUM value",
											"disabled": true
										},
										{
											"key": "vehicleIds",
											"value": "662a5d348e78355444885a10,662a5d348e78355444885a12",
											"description": "Vehicle ids with , separated each",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "user-agent",
												"value": "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_7_6 rv:3.0; TK) AppleWebKit/535.1.1 (KHTML, like Gecko) Version/4.1.8 Safari/535.1.1",
												"description": "User agent header"
											},
											{
												"key": "__utc_offset_minute",
												"value": "-345",
												"description": "utc offset minute, `new Date().getTimezoneOffset()`"
											},
											{
												"key": "x-custom-lang",
												"value": "en",
												"description": "Custom language header"
											},
											{
												"key": "x-timestamp",
												"value": "1751557249011",
												"description": "Timestamp header, in microseconds"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/org/list?isActive=true,false&blocked=true&kycStatus=BASIC&vehicleIds=662a5d348e78355444885a10,662a5d348e78355444885a12",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"org",
												"list"
											],
											"query": [
												{
													"key": "isActive",
													"value": "true,false",
													"description": "boolean value with ',' delimiter"
												},
												{
													"key": "blocked",
													"value": "true",
													"description": "boolean value with ',' delimiter"
												},
												{
													"key": "kycStatus",
													"value": "BASIC",
													"description": "ENUM value"
												},
												{
													"key": "vehicleIds",
													"value": "662a5d348e78355444885a10,662a5d348e78355444885a12",
													"description": "Vehicle ids with , separated each"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 5000,\n  \"message\": \"auth.error.accessTokenUnauthorized\",\n  \"_metadata\": {\n    \"languages\": [\n      \"en\"\n    ],\n    \"timestamp\": 1660190937231,\n    \"timezone\": \"Asia/Jakarta\",\n    \"requestId\": \"40c2f734-7247-472b-bc26-8eff6e669781\",\n    \"path\": \"/api/v1/test/hello\",\n    \"version\": \"1\",\n    \"repoVersion\": \"1.0.0\"\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "user-agent",
												"value": "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_7_6 rv:3.0; TK) AppleWebKit/535.1.1 (KHTML, like Gecko) Version/4.1.8 Safari/535.1.1",
												"description": "User agent header"
											},
											{
												"key": "__utc_offset_minute",
												"value": "-345",
												"description": "utc offset minute, `new Date().getTimezoneOffset()`"
											},
											{
												"key": "x-custom-lang",
												"value": "en",
												"description": "Custom language header"
											},
											{
												"key": "x-timestamp",
												"value": "1751557249011",
												"description": "Timestamp header, in microseconds"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/org/list?isActive=true,false&blocked=true&kycStatus=BASIC&vehicleIds=662a5d348e78355444885a10,662a5d348e78355444885a12",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"org",
												"list"
											],
											"query": [
												{
													"key": "isActive",
													"value": "true,false",
													"description": "boolean value with ',' delimiter"
												},
												{
													"key": "blocked",
													"value": "true",
													"description": "boolean value with ',' delimiter"
												},
												{
													"key": "kycStatus",
													"value": "BASIC",
													"description": "ENUM value"
												},
												{
													"key": "vehicleIds",
													"value": "662a5d348e78355444885a10,662a5d348e78355444885a12",
													"description": "Vehicle ids with , separated each"
												}
											]
										}
									},
									"status": "Request Timeout",
									"code": 408,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 5052,\n  \"message\": \"http.serverError.requestTimeout\",\n  \"_metadata\": {\n    \"languages\": [\n      \"en\"\n    ],\n    \"timestamp\": 1660190937231,\n    \"timezone\": \"Asia/Jakarta\",\n    \"requestId\": \"40c2f734-7247-472b-bc26-8eff6e669781\",\n    \"path\": \"/api/v1/test/hello\",\n    \"version\": \"1\",\n    \"repoVersion\": \"1.0.0\"\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "user-agent",
												"value": "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_7_6 rv:3.0; TK) AppleWebKit/535.1.1 (KHTML, like Gecko) Version/4.1.8 Safari/535.1.1",
												"description": "User agent header"
											},
											{
												"key": "__utc_offset_minute",
												"value": "-345",
												"description": "utc offset minute, `new Date().getTimezoneOffset()`"
											},
											{
												"key": "x-custom-lang",
												"value": "en",
												"description": "Custom language header"
											},
											{
												"key": "x-timestamp",
												"value": "1751557249011",
												"description": "Timestamp header, in microseconds"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/org/list?isActive=true,false&blocked=true&kycStatus=BASIC&vehicleIds=662a5d348e78355444885a10,662a5d348e78355444885a12",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"org",
												"list"
											],
											"query": [
												{
													"key": "isActive",
													"value": "true,false",
													"description": "boolean value with ',' delimiter"
												},
												{
													"key": "blocked",
													"value": "true",
													"description": "boolean value with ',' delimiter"
												},
												{
													"key": "kycStatus",
													"value": "BASIC",
													"description": "ENUM value"
												},
												{
													"key": "vehicleIds",
													"value": "662a5d348e78355444885a10,662a5d348e78355444885a12",
													"description": "Vehicle ids with , separated each"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 5050,\n  \"message\": \"http.serverError.internalServerError\",\n  \"_metadata\": {\n    \"languages\": [\n      \"en\"\n    ],\n    \"timestamp\": 1660190937231,\n    \"timezone\": \"Asia/Jakarta\",\n    \"requestId\": \"40c2f734-7247-472b-bc26-8eff6e669781\",\n    \"path\": \"/api/v1/test/hello\",\n    \"version\": \"1\",\n    \"repoVersion\": \"1.0.0\"\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "user-agent",
												"value": "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_7_6 rv:3.0; TK) AppleWebKit/535.1.1 (KHTML, like Gecko) Version/4.1.8 Safari/535.1.1",
												"description": "User agent header"
											},
											{
												"key": "__utc_offset_minute",
												"value": "-345",
												"description": "utc offset minute, `new Date().getTimezoneOffset()`"
											},
											{
												"key": "x-custom-lang",
												"value": "en",
												"description": "Custom language header"
											},
											{
												"key": "x-timestamp",
												"value": "1751557249011",
												"description": "Timestamp header, in microseconds"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/org/list?isActive=true,false&blocked=true&kycStatus=BASIC&vehicleIds=662a5d348e78355444885a10,662a5d348e78355444885a12",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"org",
												"list"
											],
											"query": [
												{
													"key": "isActive",
													"value": "true,false",
													"description": "boolean value with ',' delimiter"
												},
												{
													"key": "blocked",
													"value": "true",
													"description": "boolean value with ',' delimiter"
												},
												{
													"key": "kycStatus",
													"value": "BASIC",
													"description": "ENUM value"
												},
												{
													"key": "vehicleIds",
													"value": "662a5d348e78355444885a10,662a5d348e78355444885a12",
													"description": "Vehicle ids with , separated each"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 5051,\n  \"message\": \"http.serverError.serviceUnavailable\",\n  \"_metadata\": {\n    \"languages\": [\n      \"en\"\n    ],\n    \"timestamp\": 1660190937231,\n    \"timezone\": \"Asia/Jakarta\",\n    \"requestId\": \"40c2f734-7247-472b-bc26-8eff6e669781\",\n    \"path\": \"/api/v1/test/hello\",\n    \"version\": \"1\",\n    \"repoVersion\": \"1.0.0\"\n  }\n}"
								}
							]
						},
						{
							"name": "module.org.create Copy",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "user-agent",
										"value": "Opera/10.0 (Macintosh; Intel Mac OS X 10.10.3 U; JA Presto/2.9.160 Version/10.00)",
										"description": "User agent header"
									},
									{
										"key": "__utc_offset_minute",
										"value": "-345",
										"description": "utc offset minute, `new Date().getTimezoneOffset()`"
									},
									{
										"key": "x-custom-lang",
										"value": "en",
										"description": "Custom language header"
									},
									{
										"key": "x-timestamp",
										"value": "1751557249010",
										"description": "Timestamp header, in microseconds"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"Jamil_Gusikowski@yahoo.com\",\n  \"name\": \"Leonard Hand\",\n  \"mobileNumber\": \"9861111111\",\n  \"kycStatus\": \"ACCEPTED\",\n  \"isExternal\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/admin/org/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"org",
										"create"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "user-agent",
												"value": "Opera/10.0 (Macintosh; Intel Mac OS X 10.10.3 U; JA Presto/2.9.160 Version/10.00)",
												"description": "User agent header"
											},
											{
												"key": "__utc_offset_minute",
												"value": "-345",
												"description": "utc offset minute, `new Date().getTimezoneOffset()`"
											},
											{
												"key": "x-custom-lang",
												"value": "en",
												"description": "Custom language header"
											},
											{
												"key": "x-timestamp",
												"value": "1751557249010",
												"description": "Timestamp header, in microseconds"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"Jamil_Gusikowski@yahoo.com\",\n  \"name\": \"Leonard Hand\",\n  \"mobileNumber\": \"444.947.4243 x66541\",\n  \"kycStatus\": {},\n  \"contactPersonEmail\": \"Lupe_Feil39@hotmail.com\",\n  \"contactPersonPhone\": \"293.798.5701 x6900\",\n  \"contactPersonName\": \"Marquise47@yahoo.com\",\n  \"isExternal\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/org/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"org",
												"create"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 5000,\n  \"message\": \"auth.error.accessTokenUnauthorized\",\n  \"_metadata\": {\n    \"languages\": [\n      \"en\"\n    ],\n    \"timestamp\": 1660190937231,\n    \"timezone\": \"Asia/Jakarta\",\n    \"requestId\": \"40c2f734-7247-472b-bc26-8eff6e669781\",\n    \"path\": \"/api/v1/test/hello\",\n    \"version\": \"1\",\n    \"repoVersion\": \"1.0.0\"\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "user-agent",
												"value": "Opera/10.0 (Macintosh; Intel Mac OS X 10.10.3 U; JA Presto/2.9.160 Version/10.00)",
												"description": "User agent header"
											},
											{
												"key": "__utc_offset_minute",
												"value": "-345",
												"description": "utc offset minute, `new Date().getTimezoneOffset()`"
											},
											{
												"key": "x-custom-lang",
												"value": "en",
												"description": "Custom language header"
											},
											{
												"key": "x-timestamp",
												"value": "1751557249010",
												"description": "Timestamp header, in microseconds"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"Jamil_Gusikowski@yahoo.com\",\n  \"name\": \"Leonard Hand\",\n  \"mobileNumber\": \"444.947.4243 x66541\",\n  \"kycStatus\": {},\n  \"contactPersonEmail\": \"Lupe_Feil39@hotmail.com\",\n  \"contactPersonPhone\": \"293.798.5701 x6900\",\n  \"contactPersonName\": \"Marquise47@yahoo.com\",\n  \"isExternal\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/org/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"org",
												"create"
											]
										}
									},
									"status": "Request Timeout",
									"code": 408,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 5052,\n  \"message\": \"http.serverError.requestTimeout\",\n  \"_metadata\": {\n    \"languages\": [\n      \"en\"\n    ],\n    \"timestamp\": 1660190937231,\n    \"timezone\": \"Asia/Jakarta\",\n    \"requestId\": \"40c2f734-7247-472b-bc26-8eff6e669781\",\n    \"path\": \"/api/v1/test/hello\",\n    \"version\": \"1\",\n    \"repoVersion\": \"1.0.0\"\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "user-agent",
												"value": "Opera/10.0 (Macintosh; Intel Mac OS X 10.10.3 U; JA Presto/2.9.160 Version/10.00)",
												"description": "User agent header"
											},
											{
												"key": "__utc_offset_minute",
												"value": "-345",
												"description": "utc offset minute, `new Date().getTimezoneOffset()`"
											},
											{
												"key": "x-custom-lang",
												"value": "en",
												"description": "Custom language header"
											},
											{
												"key": "x-timestamp",
												"value": "1751557249010",
												"description": "Timestamp header, in microseconds"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"Jamil_Gusikowski@yahoo.com\",\n  \"name\": \"Leonard Hand\",\n  \"mobileNumber\": \"444.947.4243 x66541\",\n  \"kycStatus\": {},\n  \"contactPersonEmail\": \"Lupe_Feil39@hotmail.com\",\n  \"contactPersonPhone\": \"293.798.5701 x6900\",\n  \"contactPersonName\": \"Marquise47@yahoo.com\",\n  \"isExternal\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/org/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"org",
												"create"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 5050,\n  \"message\": \"http.serverError.internalServerError\",\n  \"_metadata\": {\n    \"languages\": [\n      \"en\"\n    ],\n    \"timestamp\": 1660190937231,\n    \"timezone\": \"Asia/Jakarta\",\n    \"requestId\": \"40c2f734-7247-472b-bc26-8eff6e669781\",\n    \"path\": \"/api/v1/test/hello\",\n    \"version\": \"1\",\n    \"repoVersion\": \"1.0.0\"\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "user-agent",
												"value": "Opera/10.0 (Macintosh; Intel Mac OS X 10.10.3 U; JA Presto/2.9.160 Version/10.00)",
												"description": "User agent header"
											},
											{
												"key": "__utc_offset_minute",
												"value": "-345",
												"description": "utc offset minute, `new Date().getTimezoneOffset()`"
											},
											{
												"key": "x-custom-lang",
												"value": "en",
												"description": "Custom language header"
											},
											{
												"key": "x-timestamp",
												"value": "1751557249010",
												"description": "Timestamp header, in microseconds"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"Jamil_Gusikowski@yahoo.com\",\n  \"name\": \"Leonard Hand\",\n  \"mobileNumber\": \"444.947.4243 x66541\",\n  \"kycStatus\": {},\n  \"contactPersonEmail\": \"Lupe_Feil39@hotmail.com\",\n  \"contactPersonPhone\": \"293.798.5701 x6900\",\n  \"contactPersonName\": \"Marquise47@yahoo.com\",\n  \"isExternal\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/org/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"org",
												"create"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 5051,\n  \"message\": \"http.serverError.serviceUnavailable\",\n  \"_metadata\": {\n    \"languages\": [\n      \"en\"\n    ],\n    \"timestamp\": 1660190937231,\n    \"timezone\": \"Asia/Jakarta\",\n    \"requestId\": \"40c2f734-7247-472b-bc26-8eff6e669781\",\n    \"path\": \"/api/v1/test/hello\",\n    \"version\": \"1\",\n    \"repoVersion\": \"1.0.0\"\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Booking Flow",
					"item": [
						{
							"name": "module.trip.list Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"const response = pm.response.json();\r",
											"const live_trip = response.data.find(trip => trip.status === \"LIVE\");\r",
											"// const live_trip = response.data[0];\r",
											"pm.test('trip id set to env',function(){\r",
											"    pm.environment.set(\"livetripId\",live_trip._id);\r",
											"})\r",
											"\r",
											"\r",
											"pm.test(\"Save one available seat title\", function () {\r",
											"    let availableSeat = live_trip.seats.find(seat => seat.status === \"AVAILABLE\");\r",
											"    if (availableSeat) {\r",
											"        pm.environment.set(\"seat-title\", availableSeat.title);\r",
											"    }\r",
											"});\r",
											"\r",
											"\r",
											"pm.test('keep pickup and dropoff route in env',function(){\r",
											"\r",
											"const route = live_trip.route;\r",
											"\r",
											"// Find first pickup (where isPickup is true)\r",
											"const firstPickup = route.find(r => r.isPickup === true);\r",
											"\r",
											"// Find last dropoff (where isDropOff is true) by reversing array first\r",
											"const lastDropoff = [...route].reverse().find(r => r.isDropOff === true);\r",
											"\r",
											"// Save their names to environment variables\r",
											"if (firstPickup) {\r",
											"    pm.environment.set(\"pickup\", firstPickup.name);\r",
											"}\r",
											"\r",
											"if (lastDropoff) {\r",
											"    pm.environment.set(\"dropoff\", lastDropoff.name);\r",
											"}\r",
											"})\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "user-agent",
										"value": "Mozilla/5.0 (Windows; U; Windows NT 5.2)AppleWebKit/537.0.0 (KHTML, like Gecko) Version/7.0.8 Safari/537.0.0",
										"description": "User agent header"
									},
									{
										"key": "__utc_offset_minute",
										"value": "-345",
										"description": "utc offset minute, `new Date().getTimezoneOffset()`"
									},
									{
										"key": "x-custom-lang",
										"value": "en",
										"description": "Custom language header"
									},
									{
										"key": "x-timestamp",
										"value": "1751557249427",
										"description": "Timestamp header, in microseconds"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/admin/live-trip/desktop/list?from={{trip-from}}&to={{trip-to}}&date={{livetripDate}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"live-trip",
										"desktop",
										"list"
									],
									"query": [
										{
											"key": "seats",
											"value": "1",
											"disabled": true
										},
										{
											"key": "from",
											"value": "{{trip-from}}"
										},
										{
											"key": "to",
											"value": "{{trip-to}}"
										},
										{
											"key": "isRefundable",
											"value": "true,false",
											"description": "boolean value with ',' delimiter",
											"disabled": true
										},
										{
											"key": "shift",
											"value": "DAY",
											"description": "enum value with , delimiter",
											"disabled": true
										},
										{
											"key": "date",
											"value": "{{livetripDate}}"
										},
										{
											"key": "operator",
											"value": "ff45f5d0bd4bb3c3da59ab1c",
											"description": "ObjectId value with , delimiter",
											"disabled": true
										},
										{
											"key": "departure",
											"value": "MORNING,DAY,EVENING,NIGHT",
											"description": "enum value with , delimiter",
											"disabled": true
										},
										{
											"key": "vehicle",
											"value": "678378cdde630671c8120f22",
											"description": "object id of vehicle",
											"disabled": true
										},
										{
											"key": "search",
											"value": "reprehenderit qui cillum",
											"description": "Search will base on _metadata.pagination._availableSearch with rule contains, and case insensitive",
											"disabled": true
										},
										{
											"key": "availableSearch",
											"value": "reprehenderit qui cillum",
											"description": "Search will base on key with rule contains, and case sensitive",
											"disabled": true
										},
										{
											"key": "perPage",
											"value": "20",
											"description": "Data per page, max 100",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"description": "page number, max 20",
											"disabled": true
										},
										{
											"key": "orderBy",
											"value": "createdAt",
											"description": "Order by base on _metadata.pagination.availableOrderBy",
											"disabled": true
										},
										{
											"key": "orderDirection",
											"value": "asc",
											"description": "Order direction base on _metadata.pagination.availableOrderDirection",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "user-agent",
												"value": "Mozilla/5.0 (Windows; U; Windows NT 5.2)AppleWebKit/537.0.0 (KHTML, like Gecko) Version/7.0.8 Safari/537.0.0",
												"description": "User agent header"
											},
											{
												"key": "__utc_offset_minute",
												"value": "-345",
												"description": "utc offset minute, `new Date().getTimezoneOffset()`"
											},
											{
												"key": "x-custom-lang",
												"value": "en",
												"description": "Custom language header"
											},
											{
												"key": "x-timestamp",
												"value": "1751557249427",
												"description": "Timestamp header, in microseconds"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/live-trip/desktop/list?seats=1&from=0ef5b4c3ed11a12cdf923ac7&to=96b389dd9d4cb06b1dd73aab&isRefundable=true,false&shift=DAY&date=2022-12-31T18:15:00.000Z&operator=ff45f5d0bd4bb3c3da59ab1c&departure=MORNING,DAY,EVENING,NIGHT&vehicle=74febc696f0da075df20c6de&search=reprehenderit qui cillum&availableSearch=reprehenderit qui cillum&perPage=20&page=1&orderBy=createdAt&orderDirection=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"live-trip",
												"desktop",
												"list"
											],
											"query": [
												{
													"key": "seats",
													"value": "1"
												},
												{
													"key": "from",
													"value": "0ef5b4c3ed11a12cdf923ac7"
												},
												{
													"key": "to",
													"value": "96b389dd9d4cb06b1dd73aab"
												},
												{
													"key": "isRefundable",
													"value": "true,false",
													"description": "boolean value with ',' delimiter"
												},
												{
													"key": "shift",
													"value": "DAY",
													"description": "enum value with , delimiter"
												},
												{
													"key": "date",
													"value": "2022-12-31T18:15:00.000Z"
												},
												{
													"key": "operator",
													"value": "ff45f5d0bd4bb3c3da59ab1c",
													"description": "ObjectId value with , delimiter"
												},
												{
													"key": "departure",
													"value": "MORNING,DAY,EVENING,NIGHT",
													"description": "enum value with , delimiter"
												},
												{
													"key": "vehicle",
													"value": "74febc696f0da075df20c6de",
													"description": "object id of vehicle"
												},
												{
													"key": "search",
													"value": "reprehenderit qui cillum",
													"description": "Search will base on _metadata.pagination._availableSearch with rule contains, and case insensitive"
												},
												{
													"key": "availableSearch",
													"value": "reprehenderit qui cillum",
													"description": "Search will base on key with rule contains, and case sensitive"
												},
												{
													"key": "perPage",
													"value": "20",
													"description": "Data per page, max 100"
												},
												{
													"key": "page",
													"value": "1",
													"description": "page number, max 20"
												},
												{
													"key": "orderBy",
													"value": "createdAt",
													"description": "Order by base on _metadata.pagination.availableOrderBy"
												},
												{
													"key": "orderDirection",
													"value": "asc",
													"description": "Order direction base on _metadata.pagination.availableOrderDirection"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 200,\n  \"message\": \"trip.list\",\n  \"_metadata\": {\n    \"languages\": [\n      \"en\"\n    ],\n    \"timestamp\": 1660190937231,\n    \"timezone\": \"Asia/Jakarta\",\n    \"requestId\": \"40c2f734-7247-472b-bc26-8eff6e669781\",\n    \"path\": \"/api/v1/test/hello\",\n    \"version\": \"1\",\n    \"repoVersion\": \"1.0.0\",\n    \"pagination\": {\n      \"search\": \"Kristen Carroll-Zboncak\",\n      \"page\": 1,\n      \"perPage\": 20,\n      \"orderBy\": \"createdAt\",\n      \"orderDirection\": \"asc\",\n      \"availableSearch\": [\n        \"name\"\n      ],\n      \"availableOrderBy\": [\n        \"createdAt\"\n      ],\n      \"availableOrderDirection\": [\n        \"asc\",\n        \"desc\"\n      ],\n      \"total\": 100,\n      \"totalPage\": 5\n    },\n    \"cursor\": {\n      \"nextPage\": \"http://217.0.0.1/__path?perPage=10&page=3&search=abc\",\n      \"previousPage\": \"http://217.0.0.1/__path?perPage=10&page=1&search=abc\",\n      \"firstPage\": \"http://217.0.0.1/__path?perPage=10&page=1&search=abc\",\n      \"lastPage\": \"http://217.0.0.1/__path?perPage=10&page=20&search=abc\"\n    }\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "user-agent",
												"value": "Mozilla/5.0 (Windows; U; Windows NT 5.2)AppleWebKit/537.0.0 (KHTML, like Gecko) Version/7.0.8 Safari/537.0.0",
												"description": "User agent header"
											},
											{
												"key": "__utc_offset_minute",
												"value": "-345",
												"description": "utc offset minute, `new Date().getTimezoneOffset()`"
											},
											{
												"key": "x-custom-lang",
												"value": "en",
												"description": "Custom language header"
											},
											{
												"key": "x-timestamp",
												"value": "1751557249427",
												"description": "Timestamp header, in microseconds"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/live-trip/desktop/list?seats=1&from=0ef5b4c3ed11a12cdf923ac7&to=96b389dd9d4cb06b1dd73aab&isRefundable=true,false&shift=DAY&date=2022-12-31T18:15:00.000Z&operator=ff45f5d0bd4bb3c3da59ab1c&departure=MORNING,DAY,EVENING,NIGHT&vehicle=74febc696f0da075df20c6de&search=reprehenderit qui cillum&availableSearch=reprehenderit qui cillum&perPage=20&page=1&orderBy=createdAt&orderDirection=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"live-trip",
												"desktop",
												"list"
											],
											"query": [
												{
													"key": "seats",
													"value": "1"
												},
												{
													"key": "from",
													"value": "0ef5b4c3ed11a12cdf923ac7"
												},
												{
													"key": "to",
													"value": "96b389dd9d4cb06b1dd73aab"
												},
												{
													"key": "isRefundable",
													"value": "true,false",
													"description": "boolean value with ',' delimiter"
												},
												{
													"key": "shift",
													"value": "DAY",
													"description": "enum value with , delimiter"
												},
												{
													"key": "date",
													"value": "2022-12-31T18:15:00.000Z"
												},
												{
													"key": "operator",
													"value": "ff45f5d0bd4bb3c3da59ab1c",
													"description": "ObjectId value with , delimiter"
												},
												{
													"key": "departure",
													"value": "MORNING,DAY,EVENING,NIGHT",
													"description": "enum value with , delimiter"
												},
												{
													"key": "vehicle",
													"value": "74febc696f0da075df20c6de",
													"description": "object id of vehicle"
												},
												{
													"key": "search",
													"value": "reprehenderit qui cillum",
													"description": "Search will base on _metadata.pagination._availableSearch with rule contains, and case insensitive"
												},
												{
													"key": "availableSearch",
													"value": "reprehenderit qui cillum",
													"description": "Search will base on key with rule contains, and case sensitive"
												},
												{
													"key": "perPage",
													"value": "20",
													"description": "Data per page, max 100"
												},
												{
													"key": "page",
													"value": "1",
													"description": "page number, max 20"
												},
												{
													"key": "orderBy",
													"value": "createdAt",
													"description": "Order by base on _metadata.pagination.availableOrderBy"
												},
												{
													"key": "orderDirection",
													"value": "asc",
													"description": "Order direction base on _metadata.pagination.availableOrderDirection"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 5000,\n  \"message\": \"auth.error.accessTokenUnauthorized\",\n  \"_metadata\": {\n    \"languages\": [\n      \"en\"\n    ],\n    \"timestamp\": 1660190937231,\n    \"timezone\": \"Asia/Jakarta\",\n    \"requestId\": \"40c2f734-7247-472b-bc26-8eff6e669781\",\n    \"path\": \"/api/v1/test/hello\",\n    \"version\": \"1\",\n    \"repoVersion\": \"1.0.0\"\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "user-agent",
												"value": "Mozilla/5.0 (Windows; U; Windows NT 5.2)AppleWebKit/537.0.0 (KHTML, like Gecko) Version/7.0.8 Safari/537.0.0",
												"description": "User agent header"
											},
											{
												"key": "__utc_offset_minute",
												"value": "-345",
												"description": "utc offset minute, `new Date().getTimezoneOffset()`"
											},
											{
												"key": "x-custom-lang",
												"value": "en",
												"description": "Custom language header"
											},
											{
												"key": "x-timestamp",
												"value": "1751557249427",
												"description": "Timestamp header, in microseconds"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/live-trip/desktop/list?seats=1&from=0ef5b4c3ed11a12cdf923ac7&to=96b389dd9d4cb06b1dd73aab&isRefundable=true,false&shift=DAY&date=2022-12-31T18:15:00.000Z&operator=ff45f5d0bd4bb3c3da59ab1c&departure=MORNING,DAY,EVENING,NIGHT&vehicle=74febc696f0da075df20c6de&search=reprehenderit qui cillum&availableSearch=reprehenderit qui cillum&perPage=20&page=1&orderBy=createdAt&orderDirection=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"live-trip",
												"desktop",
												"list"
											],
											"query": [
												{
													"key": "seats",
													"value": "1"
												},
												{
													"key": "from",
													"value": "0ef5b4c3ed11a12cdf923ac7"
												},
												{
													"key": "to",
													"value": "96b389dd9d4cb06b1dd73aab"
												},
												{
													"key": "isRefundable",
													"value": "true,false",
													"description": "boolean value with ',' delimiter"
												},
												{
													"key": "shift",
													"value": "DAY",
													"description": "enum value with , delimiter"
												},
												{
													"key": "date",
													"value": "2022-12-31T18:15:00.000Z"
												},
												{
													"key": "operator",
													"value": "ff45f5d0bd4bb3c3da59ab1c",
													"description": "ObjectId value with , delimiter"
												},
												{
													"key": "departure",
													"value": "MORNING,DAY,EVENING,NIGHT",
													"description": "enum value with , delimiter"
												},
												{
													"key": "vehicle",
													"value": "74febc696f0da075df20c6de",
													"description": "object id of vehicle"
												},
												{
													"key": "search",
													"value": "reprehenderit qui cillum",
													"description": "Search will base on _metadata.pagination._availableSearch with rule contains, and case insensitive"
												},
												{
													"key": "availableSearch",
													"value": "reprehenderit qui cillum",
													"description": "Search will base on key with rule contains, and case sensitive"
												},
												{
													"key": "perPage",
													"value": "20",
													"description": "Data per page, max 100"
												},
												{
													"key": "page",
													"value": "1",
													"description": "page number, max 20"
												},
												{
													"key": "orderBy",
													"value": "createdAt",
													"description": "Order by base on _metadata.pagination.availableOrderBy"
												},
												{
													"key": "orderDirection",
													"value": "asc",
													"description": "Order direction base on _metadata.pagination.availableOrderDirection"
												}
											]
										}
									},
									"status": "Request Timeout",
									"code": 408,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 5052,\n  \"message\": \"http.serverError.requestTimeout\",\n  \"_metadata\": {\n    \"languages\": [\n      \"en\"\n    ],\n    \"timestamp\": 1660190937231,\n    \"timezone\": \"Asia/Jakarta\",\n    \"requestId\": \"40c2f734-7247-472b-bc26-8eff6e669781\",\n    \"path\": \"/api/v1/test/hello\",\n    \"version\": \"1\",\n    \"repoVersion\": \"1.0.0\"\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "user-agent",
												"value": "Mozilla/5.0 (Windows; U; Windows NT 5.2)AppleWebKit/537.0.0 (KHTML, like Gecko) Version/7.0.8 Safari/537.0.0",
												"description": "User agent header"
											},
											{
												"key": "__utc_offset_minute",
												"value": "-345",
												"description": "utc offset minute, `new Date().getTimezoneOffset()`"
											},
											{
												"key": "x-custom-lang",
												"value": "en",
												"description": "Custom language header"
											},
											{
												"key": "x-timestamp",
												"value": "1751557249427",
												"description": "Timestamp header, in microseconds"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/live-trip/desktop/list?seats=1&from=0ef5b4c3ed11a12cdf923ac7&to=96b389dd9d4cb06b1dd73aab&isRefundable=true,false&shift=DAY&date=2022-12-31T18:15:00.000Z&operator=ff45f5d0bd4bb3c3da59ab1c&departure=MORNING,DAY,EVENING,NIGHT&vehicle=74febc696f0da075df20c6de&search=reprehenderit qui cillum&availableSearch=reprehenderit qui cillum&perPage=20&page=1&orderBy=createdAt&orderDirection=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"live-trip",
												"desktop",
												"list"
											],
											"query": [
												{
													"key": "seats",
													"value": "1"
												},
												{
													"key": "from",
													"value": "0ef5b4c3ed11a12cdf923ac7"
												},
												{
													"key": "to",
													"value": "96b389dd9d4cb06b1dd73aab"
												},
												{
													"key": "isRefundable",
													"value": "true,false",
													"description": "boolean value with ',' delimiter"
												},
												{
													"key": "shift",
													"value": "DAY",
													"description": "enum value with , delimiter"
												},
												{
													"key": "date",
													"value": "2022-12-31T18:15:00.000Z"
												},
												{
													"key": "operator",
													"value": "ff45f5d0bd4bb3c3da59ab1c",
													"description": "ObjectId value with , delimiter"
												},
												{
													"key": "departure",
													"value": "MORNING,DAY,EVENING,NIGHT",
													"description": "enum value with , delimiter"
												},
												{
													"key": "vehicle",
													"value": "74febc696f0da075df20c6de",
													"description": "object id of vehicle"
												},
												{
													"key": "search",
													"value": "reprehenderit qui cillum",
													"description": "Search will base on _metadata.pagination._availableSearch with rule contains, and case insensitive"
												},
												{
													"key": "availableSearch",
													"value": "reprehenderit qui cillum",
													"description": "Search will base on key with rule contains, and case sensitive"
												},
												{
													"key": "perPage",
													"value": "20",
													"description": "Data per page, max 100"
												},
												{
													"key": "page",
													"value": "1",
													"description": "page number, max 20"
												},
												{
													"key": "orderBy",
													"value": "createdAt",
													"description": "Order by base on _metadata.pagination.availableOrderBy"
												},
												{
													"key": "orderDirection",
													"value": "asc",
													"description": "Order direction base on _metadata.pagination.availableOrderDirection"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 5050,\n  \"message\": \"http.serverError.internalServerError\",\n  \"_metadata\": {\n    \"languages\": [\n      \"en\"\n    ],\n    \"timestamp\": 1660190937231,\n    \"timezone\": \"Asia/Jakarta\",\n    \"requestId\": \"40c2f734-7247-472b-bc26-8eff6e669781\",\n    \"path\": \"/api/v1/test/hello\",\n    \"version\": \"1\",\n    \"repoVersion\": \"1.0.0\"\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "user-agent",
												"value": "Mozilla/5.0 (Windows; U; Windows NT 5.2)AppleWebKit/537.0.0 (KHTML, like Gecko) Version/7.0.8 Safari/537.0.0",
												"description": "User agent header"
											},
											{
												"key": "__utc_offset_minute",
												"value": "-345",
												"description": "utc offset minute, `new Date().getTimezoneOffset()`"
											},
											{
												"key": "x-custom-lang",
												"value": "en",
												"description": "Custom language header"
											},
											{
												"key": "x-timestamp",
												"value": "1751557249427",
												"description": "Timestamp header, in microseconds"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/live-trip/desktop/list?seats=1&from=0ef5b4c3ed11a12cdf923ac7&to=96b389dd9d4cb06b1dd73aab&isRefundable=true,false&shift=DAY&date=2022-12-31T18:15:00.000Z&operator=ff45f5d0bd4bb3c3da59ab1c&departure=MORNING,DAY,EVENING,NIGHT&vehicle=74febc696f0da075df20c6de&search=reprehenderit qui cillum&availableSearch=reprehenderit qui cillum&perPage=20&page=1&orderBy=createdAt&orderDirection=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"live-trip",
												"desktop",
												"list"
											],
											"query": [
												{
													"key": "seats",
													"value": "1"
												},
												{
													"key": "from",
													"value": "0ef5b4c3ed11a12cdf923ac7"
												},
												{
													"key": "to",
													"value": "96b389dd9d4cb06b1dd73aab"
												},
												{
													"key": "isRefundable",
													"value": "true,false",
													"description": "boolean value with ',' delimiter"
												},
												{
													"key": "shift",
													"value": "DAY",
													"description": "enum value with , delimiter"
												},
												{
													"key": "date",
													"value": "2022-12-31T18:15:00.000Z"
												},
												{
													"key": "operator",
													"value": "ff45f5d0bd4bb3c3da59ab1c",
													"description": "ObjectId value with , delimiter"
												},
												{
													"key": "departure",
													"value": "MORNING,DAY,EVENING,NIGHT",
													"description": "enum value with , delimiter"
												},
												{
													"key": "vehicle",
													"value": "74febc696f0da075df20c6de",
													"description": "object id of vehicle"
												},
												{
													"key": "search",
													"value": "reprehenderit qui cillum",
													"description": "Search will base on _metadata.pagination._availableSearch with rule contains, and case insensitive"
												},
												{
													"key": "availableSearch",
													"value": "reprehenderit qui cillum",
													"description": "Search will base on key with rule contains, and case sensitive"
												},
												{
													"key": "perPage",
													"value": "20",
													"description": "Data per page, max 100"
												},
												{
													"key": "page",
													"value": "1",
													"description": "page number, max 20"
												},
												{
													"key": "orderBy",
													"value": "createdAt",
													"description": "Order by base on _metadata.pagination.availableOrderBy"
												},
												{
													"key": "orderDirection",
													"value": "asc",
													"description": "Order direction base on _metadata.pagination.availableOrderDirection"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 5051,\n  \"message\": \"http.serverError.serviceUnavailable\",\n  \"_metadata\": {\n    \"languages\": [\n      \"en\"\n    ],\n    \"timestamp\": 1660190937231,\n    \"timezone\": \"Asia/Jakarta\",\n    \"requestId\": \"40c2f734-7247-472b-bc26-8eff6e669781\",\n    \"path\": \"/api/v1/test/hello\",\n    \"version\": \"1\",\n    \"repoVersion\": \"1.0.0\"\n  }\n}"
								}
							]
						},
						{
							"name": "Booking hold Seats",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('kept session i din env',function(){\r",
											"    pm.environment.set(\"sessionId\", pm.response.json().data.session);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"seats\": [\n    \"{{seat-title}}\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/admin/booking/create-session/:trip",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"admin",
										"booking",
										"create-session",
										":trip"
									],
									"variable": [
										{
											"key": "trip",
											"value": "{{livetripId}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"seats\": [\n    \"A1\"\n  ],\n  \"provider\": \"2642352fe63f570afed3d35d\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/admin/booking/create-session/:trip",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"admin",
												"booking",
												"create-session",
												":trip"
											],
											"variable": [
												{
													"key": "trip"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 5000,\n  \"message\": \"auth.error.accessTokenUnauthorized\",\n  \"_metadata\": {\n    \"languages\": [\n      \"en\"\n    ],\n    \"timestamp\": 1660190937231,\n    \"timezone\": \"Asia/Jakarta\",\n    \"requestId\": \"40c2f734-7247-472b-bc26-8eff6e669781\",\n    \"path\": \"/api/v1/test/hello\",\n    \"version\": \"1\",\n    \"repoVersion\": \"1.0.0\"\n  }\n}"
								}
							]
						},
						{
							"name": "Booking create Booking Desktop",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Booking id kept in environment', function(){\r",
											"    pm.environment.set('bookingid', pm.response.json().data._id);\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"passengerContactPerson\": {\n    \"fullName\": \"{{contactName}}\",\n    \"mobileNumber\": \"{{contactPhoneNumber}}\",\n    \"countryCode\": \"977\"\n  },\n  \"pickUp\": {\n    \"name\": \"{{pickup}}\",\n    \"time\": \"{{livetripDate}}\"\n  },\n  \"dropOff\": {\n    \"name\": \"{{dropoff}}\"\n  },\n  \"seats\": [\n    {\n      \"number\": \"{{seat-title}}\",\n        \"discount\": 0\n    }\n  ],\n  \"trip\": \"{{livetripId}}\",\n  \"session\": \"{{sessionId}}\",\n  \"remarks\": \"Test Release\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/admin/booking/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"admin",
										"booking",
										"create"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"passengerContactPerson\": {\n    \"fullName\": \"Dennis.Marquardt\",\n    \"mobileNumber\": \"9824000000\",\n    \"countryCode\": \"977\",\n    \"email\": \"Kari_Roberts69@hotmail.com\",\n    \"secondaryMobileNumber\": \"9824000000\"\n  },\n  \"pickUp\": {\n    \"name\": \"Viola.Shanahan23\",\n    \"time\": \"2026-04-25T00:53:32.064Z\"\n  },\n  \"dropOff\": {\n    \"name\": \"Viola.Shanahan23\",\n    \"time\": \"2026-04-25T00:53:32.064Z\"\n  },\n  \"seats\": [\n    {\n      \"number\": \"A1\",\n      \"discount\": 123,\n      \"passenger\": {\n        \"gender\": \"OTHERS\",\n        \"fullName\": \"Bernice_Hartmann\",\n        \"age\": 5499459752427520,\n        \"mobileNumber\": \"9824000000\",\n        \"countryCode\": \"977\",\n        \"email\": \"Vivianne.Emmerich@hotmail.com\"\n      },\n      \"serviceCharge\": 5\n    },\n    {\n      \"number\": \"A1\",\n      \"discount\": 123,\n      \"passenger\": {\n        \"gender\": \"OTHERS\",\n        \"fullName\": \"Bernice_Hartmann\",\n        \"age\": 5499459752427520,\n        \"mobileNumber\": \"9824000000\",\n        \"countryCode\": \"977\",\n        \"email\": \"Vivianne.Emmerich@hotmail.com\"\n      },\n      \"serviceCharge\": 5\n    }\n  ],\n  \"trip\": \"6d38b3a4659a1a70a393c0e0\",\n  \"session\": \"3b7ddfe9-c93b-413d-8569-0373979bb054\",\n  \"coupon\": \"GMG COUPON\",\n  \"remarks\": \"GMG COUPON\",\n  \"provider\": \"b67dfbabc451ec94cebac804\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/admin/booking/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"admin",
												"booking",
												"create"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 5000,\n  \"message\": \"auth.error.accessTokenUnauthorized\",\n  \"_metadata\": {\n    \"languages\": [\n      \"en\"\n    ],\n    \"timestamp\": 1660190937231,\n    \"timezone\": \"Asia/Jakarta\",\n    \"requestId\": \"40c2f734-7247-472b-bc26-8eff6e669781\",\n    \"path\": \"/api/v1/test/hello\",\n    \"version\": \"1\",\n    \"repoVersion\": \"1.0.0\"\n  }\n}"
								}
							]
						},
						{
							"name": "Payment Gateway",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"response = pm.response.json().data[0];\r",
											"\r",
											"pm.test('payment gateway kept in env',function(){\r",
											"    pm.environment.set(\"paymentGateway\", response._id);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/admin/payment-gateway/list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"payment-gateway",
										"list"
									],
									"query": [
										{
											"key": "isActive",
											"value": "true,false",
											"description": "boolean value with ',' delimiter",
											"disabled": true
										},
										{
											"key": "search",
											"value": "reprehenderit qui cillum",
											"description": "Search will base on _metadata.pagination._availableSearch with rule contains, and case insensitive",
											"disabled": true
										},
										{
											"key": "availableSearch",
											"value": "reprehenderit qui cillum",
											"description": "Search will base on key with rule contains, and case sensitive",
											"disabled": true
										},
										{
											"key": "perPage",
											"value": "20",
											"description": "Data per page, max 100",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"description": "page number, max 20",
											"disabled": true
										},
										{
											"key": "orderBy",
											"value": "createdAt",
											"description": "Order by base on _metadata.pagination.availableOrderBy",
											"disabled": true
										},
										{
											"key": "orderDirection",
											"value": "asc",
											"description": "Order direction base on _metadata.pagination.availableOrderDirection",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/payment-gateway/list?isActive=true,false&search=reprehenderit qui cillum&availableSearch=reprehenderit qui cillum&perPage=20&page=1&orderBy=createdAt&orderDirection=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"payment-gateway",
												"list"
											],
											"query": [
												{
													"key": "isActive",
													"value": "true,false",
													"description": "boolean value with ',' delimiter"
												},
												{
													"key": "search",
													"value": "reprehenderit qui cillum",
													"description": "Search will base on _metadata.pagination._availableSearch with rule contains, and case insensitive"
												},
												{
													"key": "availableSearch",
													"value": "reprehenderit qui cillum",
													"description": "Search will base on key with rule contains, and case sensitive"
												},
												{
													"key": "perPage",
													"value": "20",
													"description": "Data per page, max 100"
												},
												{
													"key": "page",
													"value": "1",
													"description": "page number, max 20"
												},
												{
													"key": "orderBy",
													"value": "createdAt",
													"description": "Order by base on _metadata.pagination.availableOrderBy"
												},
												{
													"key": "orderDirection",
													"value": "asc",
													"description": "Order direction base on _metadata.pagination.availableOrderDirection"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 200,\n  \"message\": \"operatorType.list\",\n  \"_metadata\": {\n    \"languages\": [\n      \"en\"\n    ],\n    \"timestamp\": 1660190937231,\n    \"timezone\": \"Asia/Jakarta\",\n    \"requestId\": \"40c2f734-7247-472b-bc26-8eff6e669781\",\n    \"path\": \"/api/v1/test/hello\",\n    \"version\": \"1\",\n    \"repoVersion\": \"1.0.0\",\n    \"pagination\": {\n      \"search\": \"Kristen Carroll-Zboncak\",\n      \"page\": 1,\n      \"perPage\": 20,\n      \"orderBy\": \"createdAt\",\n      \"orderDirection\": \"asc\",\n      \"availableSearch\": [\n        \"name\"\n      ],\n      \"availableOrderBy\": [\n        \"createdAt\"\n      ],\n      \"availableOrderDirection\": [\n        \"asc\",\n        \"desc\"\n      ],\n      \"total\": 100,\n      \"totalPage\": 5\n    },\n    \"cursor\": {\n      \"nextPage\": \"http://217.0.0.1/__path?perPage=10&page=3&search=abc\",\n      \"previousPage\": \"http://217.0.0.1/__path?perPage=10&page=1&search=abc\",\n      \"firstPage\": \"http://217.0.0.1/__path?perPage=10&page=1&search=abc\",\n      \"lastPage\": \"http://217.0.0.1/__path?perPage=10&page=20&search=abc\"\n    }\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/payment-gateway/list?isActive=true,false&search=reprehenderit qui cillum&availableSearch=reprehenderit qui cillum&perPage=20&page=1&orderBy=createdAt&orderDirection=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"payment-gateway",
												"list"
											],
											"query": [
												{
													"key": "isActive",
													"value": "true,false",
													"description": "boolean value with ',' delimiter"
												},
												{
													"key": "search",
													"value": "reprehenderit qui cillum",
													"description": "Search will base on _metadata.pagination._availableSearch with rule contains, and case insensitive"
												},
												{
													"key": "availableSearch",
													"value": "reprehenderit qui cillum",
													"description": "Search will base on key with rule contains, and case sensitive"
												},
												{
													"key": "perPage",
													"value": "20",
													"description": "Data per page, max 100"
												},
												{
													"key": "page",
													"value": "1",
													"description": "page number, max 20"
												},
												{
													"key": "orderBy",
													"value": "createdAt",
													"description": "Order by base on _metadata.pagination.availableOrderBy"
												},
												{
													"key": "orderDirection",
													"value": "asc",
													"description": "Order direction base on _metadata.pagination.availableOrderDirection"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 5000,\n  \"message\": \"auth.error.accessTokenUnauthorized\",\n  \"_metadata\": {\n    \"languages\": [\n      \"en\"\n    ],\n    \"timestamp\": 1660190937231,\n    \"timezone\": \"Asia/Jakarta\",\n    \"requestId\": \"40c2f734-7247-472b-bc26-8eff6e669781\",\n    \"path\": \"/api/v1/test/hello\",\n    \"version\": \"1\",\n    \"repoVersion\": \"1.0.0\"\n  }\n}"
								}
							]
						},
						{
							"name": "Initialize Manual Payment Transaction Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('transaction kept in env',function(){\r",
											"    pm.environment.set('transactionId', pm.response.json().data.transaction);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": \"{{bookingid}}\",\n  \"gateway\": \"{{paymentGateway}}\",\n  \"amount\": 10\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/admin/payment/initialize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"admin",
										"payment",
										"initialize"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"bookingId\": \"0870bede77d2c2dfe77b3bec\",\n  \"gateway\": \"db050cfbcea7cc0d99b1a29c\",\n  \"adminAccountId\": \"5aea8b39ac85e46dba7fdda2\",\n  \"paymentProvider\": \"CASH\",\n  \"provider\": \"bacffdfabb308d1c6ef181df\",\n  \"amount\": 1\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/admin/payment/initialize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"admin",
												"payment",
												"initialize"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 5000,\n  \"message\": \"auth.error.accessTokenUnauthorized\",\n  \"_metadata\": {\n    \"languages\": [\n      \"en\"\n    ],\n    \"timestamp\": 1660190937231,\n    \"timezone\": \"Asia/Jakarta\",\n    \"requestId\": \"40c2f734-7247-472b-bc26-8eff6e669781\",\n    \"path\": \"/api/v1/test/hello\",\n    \"version\": \"1\",\n    \"repoVersion\": \"1.0.0\"\n  }\n}"
								}
							]
						},
						{
							"name": "Pay Payment Manual",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transactionId\": \"{{transactionId}}\",\n  \"transactionNumber\": \"921d58bac70b7b7f8e9edc3b\",\n  \"bookingId\": \"{{bookingid}}\",\n  \"remarks\": \"Gideon.Raynor95\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/admin/payment/pay",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"admin",
										"payment",
										"pay"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"transactionId\": \"84428be010dcf96fc4f488df\",\n  \"transactionNumber\": \"921d58bac70b7b7f8e9edc3b\",\n  \"bookingId\": \"16b2e1cb4e88e5abed9b47bf\",\n  \"remarks\": \"Gideon.Raynor95\",\n  \"photo\": {\n    \"path\": \"/Users\",\n    \"pathWithFilename\": \"/boot/couple.3gpp\",\n    \"filename\": \"phrase_whether.avi\",\n    \"completedUrl\": \"https://quizzical-fragrance.info//usr/X11R6/wherever.3gp\",\n    \"baseUrl\": \"https://courageous-hand.info\",\n    \"mime\": \"video/ogg\"\n  },\n  \"provider\": \"ca8d9ab7bc153c4cfde1e56f\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/admin/payment/pay",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"admin",
												"payment",
												"pay"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 5000,\n  \"message\": \"auth.error.accessTokenUnauthorized\",\n  \"_metadata\": {\n    \"languages\": [\n      \"en\"\n    ],\n    \"timestamp\": 1660190937231,\n    \"timezone\": \"Asia/Jakarta\",\n    \"requestId\": \"40c2f734-7247-472b-bc26-8eff6e669781\",\n    \"path\": \"/api/v1/test/hello\",\n    \"version\": \"1\",\n    \"repoVersion\": \"1.0.0\"\n  }\n}"
								}
							]
						},
						{
							"name": "Booking Admin Controller V2 get Booking Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();\r",
											"let booking = response.data;\r",
											"\r",
											"pm.test(\"It has all the required keys\", function() {\r",
											"    const requiredkeys = [\"_id\", \"vehicle\", \"trip\", \"pickUp\", \"dropOff\", \"bookedFor\", \"bookedBy\", \"paymentBreakdown\", \"passengerContactPerson\", \"seats\", \"shortId\", \"operatorContacts\", \"status\", \"payout\", \"sessionId\", \"leadId\", \"fullFare\", \"totalAmount\", \"canceledAmount\", \"currency\", \"discount\", \"paymentStatus\", \"isRefundable\", \"isActive\", \"transaction\", \"isSmsSent\", \"createdAt\", \"updatedAt\", \"jobId\"];\r",
											"    \r",
											"    requiredkeys.forEach(key => { pm.expect(booking).to.have.property(key) });\r",
											"})\r",
											"\r",
											"pm.test(\"Booking list meets all the keys with correct types \", function() {\r",
											"    // Type checks based on sample\r",
											"    pm.expect(booking._id).to.be.a(\"string\");\r",
											"    pm.expect(booking.vehicle).to.be.an(\"object\");\r",
											"    pm.expect(booking.trip).to.be.an(\"object\");\r",
											"    pm.expect(booking.pickUp).to.be.an(\"object\");\r",
											"    pm.expect(booking.dropOff).to.be.an(\"object\");\r",
											"    pm.expect(booking.bookedFor).to.be.an(\"object\");\r",
											"    pm.expect(booking.bookedBy).to.be.an(\"object\");\r",
											"    pm.expect(booking.paymentBreakdown).to.be.an(\"object\");\r",
											"    pm.expect(booking.passengerContactPerson).to.be.an(\"object\");\r",
											"    pm.expect(booking.seats).to.be.an(\"array\");\r",
											"    pm.expect(booking.shortId).to.be.a(\"string\");\r",
											"    pm.expect(booking.operatorContacts).to.be.an(\"array\");\r",
											"    pm.expect(booking.status).to.be.a(\"string\");\r",
											"    pm.expect(booking.sessionId).to.be.a(\"string\");\r",
											"    pm.expect(booking.leadId == null || typeof booking.leadId === \"string\").to.be.true;\r",
											"    pm.expect(booking.fullFare).to.be.a(\"number\");\r",
											"    pm.expect(booking.totalAmount).to.be.a(\"number\");\r",
											"    pm.expect(booking.canceledAmount).to.be.a(\"number\");\r",
											"    pm.expect(booking.currency).to.be.a(\"string\");\r",
											"    pm.expect(booking.discount).to.be.a(\"number\");\r",
											"    pm.expect(booking.paymentStatus).to.be.a(\"string\");\r",
											"    pm.expect(booking.isRefundable).to.be.a(\"boolean\");\r",
											"    pm.expect(booking.isActive).to.be.a(\"boolean\");\r",
											"    pm.expect(booking.transaction == null || typeof booking.transaction == \"object\").to.be.true;\r",
											"    pm.expect(booking.isSmsSent).to.be.a(\"boolean\");\r",
											"    pm.expect(booking.createdAt).to.be.a(\"string\");\r",
											"    pm.expect(booking.updatedAt).to.be.a(\"string\");\r",
											"    pm.expect(booking.jobId).to.be.a(\"string\");\r",
											"})\r",
											"\r",
											"pm.test(\"it has all the trip keys\",function(){\r",
											"    const tripkeys = booking.trip;\r",
											"\r",
											"    const trip = [\"tripId\",\"from\",\"to\",\"startTime\",\"reachTime\",\"org\",\"serviceId\",\"apiProvider\",\"isExternal\"]\r",
											"\r",
											"    trip.forEach(key=>{pm.expect(tripkeys).to.have.property(key)});\r",
											"});\r",
											"\r",
											"//VEHICLE ARRAY CHECK\r",
											"pm.test(\"It has all the vehicle keys\", function() {\r",
											"    const bookingvehicle = booking.vehicle;\r",
											"\r",
											"\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"_id\").that.is.a(\"string\");\r",
											"\t// pm.expect(bookingvehicle).to.have.property(\"type\").that.is.a(\"string\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"org\").that.is.a(\"string\");\r",
											"\tpm.expect(bookingvehicle.model == null || typeof bookingvehicle.model == \"string\" ).to.be.true;\r",
											"\tpm.expect(bookingvehicle.makeYear == null || typeof bookingvehicle.makeYear == \"string\").to.be.true;\r",
											"\tpm.expect(bookingvehicle.purchasedYear == null || bookingvehicle.purchasedYear == \"string\").to.be.true;\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"name\").that.is.a(\"string\");\r",
											"\t// pm.expect(bookingvehicle).to.have.property(\"description\").that.is.a(\"string\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"numberPlate\").that.is.a(\"string\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"profile\").that.is.a(\"object\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"isActive\").that.is.a(\"boolean\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"status\").that.is.a(\"string\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"staff\").that.is.a(\"array\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"photos\").that.is.a(\"array\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"createdAt\").that.is.a(\"string\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"updatedAt\").that.is.a(\"string\");\r",
											"\tpm.expect(bookingvehicle).to.have.property(\"configs\").that.is.a(\"array\");\r",
											"    \r",
											"});\r",
											"\r",
											"//pickup and drop off\r",
											"pm.test(\"It has pick up and drop off key\", function() {\r",
											"    const pickup = booking.pickUp;\r",
											"\r",
											"    pm.expect(pickup).to.have.property(\"name\");\r",
											"    pm.expect(pickup).to.have.property(\"time\");\r",
											"\r",
											"    pm.expect(booking.dropOff).to.have.property(\"name\");\r",
											"      if (booking.dropOff && booking.dropOff.hasOwnProperty(\"time\")) {\r",
											"        pm.expect(booking.dropOff).to.have.property(\"time\");\r",
											"    }\r",
											"})\r",
											"\r",
											"pm.test(\"It has all thebookedFor keys\",function(){\r",
											"    pm.expect(booking.bookedFor).to.have.property(\"code\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedFor).to.have.property(\"_id\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedFor).to.have.property(\"fullName\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedFor).to.have.property(\"org\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedFor).to.have.property(\"email\");\r",
											"    pm.expect(booking.bookedFor).to.have.property(\"mobileNumber\").that.is.a(\"string\");\r",
											"})\r",
											"\r",
											"pm.test(\"It has all bookedBy keys\",function(){\r",
											"    pm.expect(booking.bookedBy).to.have.property(\"channel\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedBy).to.have.property(\"code\").that.is.a(\"string\");\r",
											"    if (booking.bookedBy.type !=null){\r",
											"    pm.expect(booking.bookedBy).to.have.property(\"type\").that.is.a(\"string\");\r",
											"    }\r",
											"    pm.expect(booking.bookedBy).to.have.property(\"_id\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedBy).to.have.property(\"fullName\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedBy).to.have.property(\"org\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedBy).to.have.property(\"email\").that.is.a(\"string\");\r",
											"    pm.expect(booking.bookedBy).to.have.property(\"mobileNumber\").that.is.a(\"string\");\r",
											"\r",
											"})\r",
											"\r",
											"pm.test(\"It has all the paymentBreakdown Keys\",function(){\r",
											"\r",
											"pm.expect(booking.paymentBreakdown).to.have.property(\"gomygo\").that.is.an(\"object\");\r",
											"\r",
											"\tpm.expect(booking.paymentBreakdown.gomygo).to.have.property(\"notionalBalanceUsed\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.gomygo).to.have.property(\"notionalCashbackRewarded\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.gomygo).to.have.property(\"realBalanceUsed\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.gomygo).to.have.property(\"realCashbackRewarded\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.gomygo).to.have.property(\"remainingAmount\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.gomygo).to.have.property(\"totalAmount\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.gomygo).to.have.property(\"paidAmount\").that.is.a(\"number\");\r",
											"\r",
											"pm.expect(booking.paymentBreakdown).to.have.property(\"customer\").that.is.an(\"object\");\r",
											"\r",
											"\tpm.expect(booking.paymentBreakdown.customer).to.have.property(\"notionalBalanceUsed\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.customer).to.have.property(\"notionalCashbackRewarded\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.customer).to.have.property(\"realBalanceUsed\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.customer).to.have.property(\"realCashbackRewarded\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.customer).to.have.property(\"remainingAmount\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.customer).to.have.property(\"totalAmount\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.customer).to.have.property(\"paidAmount\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.customer).to.have.property(\"remAmountCollector\").that.is.a(\"string\");\t\r",
											"\r",
											"pm.expect(booking.paymentBreakdown).to.have.property(\"operator\").that.is.an(\"object\");\r",
											"\r",
											"\tpm.expect(booking.paymentBreakdown.operator).to.have.property(\"notionalBalanceUsed\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.operator).to.have.property(\"notionalCashbackRewarded\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.operator).to.have.property(\"realBalanceUsed\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.operator).to.have.property(\"realCashbackRewarded\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.operator).to.have.property(\"remainingAmount\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.operator).to.have.property(\"totalAmount\").that.is.a(\"number\");\r",
											"\tpm.expect(booking.paymentBreakdown.operator).to.have.property(\"paidAmount\").that.is.a(\"number\");\r",
											"\r",
											"});\r",
											"\r",
											"pm.test(\"It has all the passengerContactPerson Keys\",function(){\r",
											"\r",
											"pm.expect(booking.passengerContactPerson).to.have.property(\"fullName\").that.is.an(\"string\");\r",
											"pm.expect(booking.passengerContactPerson).to.have.property(\"mobileNumber\").that.is.an(\"string\");\r",
											"pm.expect(booking.passengerContactPerson).to.have.property(\"countryCode\").that.is.an(\"string\");\r",
											"\r",
											"});\r",
											"\r",
											"pm.test(\"It has all the seats Keys\",function(){\r",
											"\r",
											"pm.expect(booking.seats).to.be.an(\"array\");\r",
											"\r",
											"const firstseat = booking.seats[0];\r",
											"\r",
											"\tpm.expect(firstseat).to.have.property(\"number\").that.is.a(\"string\");\r",
											"\tpm.expect(firstseat).to.have.property(\"price\").that.is.a(\"number\");\r",
											"\tpm.expect(firstseat).to.have.property(\"status\").that.is.a(\"string\");\r",
											"\tpm.expect(firstseat).to.have.property(\"ticket\").that.is.a(\"string\");\r",
											"    if (firstseat.hasOwnProperty(\"passenger\")) {\r",
											"        pm.expect(firstseat.passenger).to.be.an(\"object\");\r",
											"    }\r",
											"\tif (firstseat.hasOwnProperty(\"passenger\")) {\r",
											"    pm.expect(firstseat.passenger).to.be.a(\"string\");\r",
											"}\r",
											"\tpm.expect(firstseat).to.have.property(\"discount\").that.is.a(\"number\");\r",
											"\tpm.expect(firstseat).to.have.property(\"variant\").that.is.a(\"string\");\r",
											"\tpm.expect(firstseat).to.have.property(\"serviceCharge\").that.is.a(\"number\");\r",
											"\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"It has all the operatorContacts Keys\",function(){\r",
											"\r",
											"const fristoperator = booking.operatorContacts[0];\r",
											"\r",
											"pm.expect(fristoperator).to.have.property(\"fullName\").that.is.an(\"string\");\r",
											"pm.expect(fristoperator).to.have.property(\"mobileNumber\").that.is.an(\"string\");\r",
											"pm.expect(fristoperator).to.have.property(\"countryCode\").that.is.an(\"string\");\r",
											"pm.expect(fristoperator).to.have.property(\"type\").that.is.an(\"string\");\r",
											"pm.expect(fristoperator).to.have.property(\"_id\").that.is.an(\"string\");\r",
											"\r",
											"});\r",
											"\r",
											"\r",
											"pm.test('Booking status is booked', function(){\r",
											"    pm.expect(booking.status).to.eql(\"BOOKED\");\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/admin/booking/:booking",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"admin",
										"booking",
										":booking"
									],
									"variable": [
										{
											"key": "booking",
											"value": "{{bookingid}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/admin/booking/:booking",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"admin",
												"booking",
												":booking"
											],
											"variable": [
												{
													"key": "booking"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 5000,\n  \"message\": \"auth.error.accessTokenUnauthorized\",\n  \"_metadata\": {\n    \"languages\": [\n      \"en\"\n    ],\n    \"timestamp\": 1660190937231,\n    \"timezone\": \"Asia/Jakarta\",\n    \"requestId\": \"40c2f734-7247-472b-bc26-8eff6e669781\",\n    \"path\": \"/api/v1/test/hello\",\n    \"version\": \"1\",\n    \"repoVersion\": \"1.0.0\"\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Automation live trip",
					"item": [
						{
							"name": "update-automation-bulk",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY4N2Y2ZDRjZGFiNGQzMmI3YWRjNTA4NSIsImZ1bGxOYW1lIjoidGVzdCBrdXNoZmludGVjaCIsIm1vYmlsZU51bWJlciI6Ijk4NTc0NDQ0NDQiLCJlbWFpbCI6InNhdHlhbkBnb215Z28uY29tIiwidHlwZSI6IkFETUlOX1NUQUZGIiwiY29kZSI6IlNaQVFLRUFEIiwic2VydmljZVR5cGUiOiJBRE1JTiJ9LCJpYXQiOjE3NTM4NjQ4NjYsIm5iZiI6MTc1Mzg2NDg2NiwiZXhwIjoxNzUzODkzNjY2LCJhdWQiOiJodHRwczovL2V4YW1wbGUuY29tIiwiaXNzIjoiZ21nIiwic3ViIjoiR01HRGV2ZWxvcG1lbnQifQ._-LB1-En6GSMgeJYkZne_BwghqhkXB8nc0e5XIQZiT4"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": \"LIVE\",\r\n  \"isEnabled\": true,\r\n  \"days\": 10\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://stg.api.gomygo.com/api/v1/admin/trip/desktop/update-automation-bulk",
									"protocol": "https",
									"host": [
										"stg",
										"api",
										"gomygo",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"trip",
										"desktop",
										"update-automation-bulk"
									]
								},
								"description": "Generated from cURL: curl -X 'PATCH' \\\r\n  'https://stg.api.gomygo.com/api/v1/admin/trip/desktop/update-automation-bulk' \\\r\n  -H 'accept: */*' \\\r\n  -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY4N2Y2ZDRjZGFiNGQzMmI3YWRjNTA4NSIsImZ1bGxOYW1lIjoidGVzdCBrdXNoZmludGVjaCIsIm1vYmlsZU51bWJlciI6Ijk4NTc0NDQ0NDQiLCJlbWFpbCI6InNhdHlhbkBnb215Z28uY29tIiwidHlwZSI6IkFETUlOX1NUQUZGIiwiY29kZSI6IlNaQVFLRUFEIiwic2VydmljZVR5cGUiOiJBRE1JTiJ9LCJpYXQiOjE3NTM4NjQ4NjYsIm5iZiI6MTc1Mzg2NDg2NiwiZXhwIjoxNzUzODkzNjY2LCJhdWQiOiJodHRwczovL2V4YW1wbGUuY29tIiwiaXNzIjoiZ21nIiwic3ViIjoiR01HRGV2ZWxvcG1lbnQifQ._-LB1-En6GSMgeJYkZne_BwghqhkXB8nc0e5XIQZiT4' \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{\r\n  \"status\": \"LIVE\",\r\n  \"isEnabled\": true,\r\n  \"days\": 10\r\n}'"
							},
							"response": []
						},
						{
							"name": "auto-live-sync",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY4N2Y2ZDRjZGFiNGQzMmI3YWRjNTA4NSIsImZ1bGxOYW1lIjoidGVzdCBrdXNoZmludGVjaCIsIm1vYmlsZU51bWJlciI6Ijk4NTc0NDQ0NDQiLCJlbWFpbCI6InNhdHlhbkBnb215Z28uY29tIiwidHlwZSI6IkFETUlOX1NUQUZGIiwiY29kZSI6IlNaQVFLRUFEIiwic2VydmljZVR5cGUiOiJBRE1JTiJ9LCJpYXQiOjE3NTM4NjQ4NjYsIm5iZiI6MTc1Mzg2NDg2NiwiZXhwIjoxNzUzODkzNjY2LCJhdWQiOiJodHRwczovL2V4YW1wbGUuY29tIiwiaXNzIjoiZ21nIiwic3ViIjoiR01HRGV2ZWxvcG1lbnQifQ._-LB1-En6GSMgeJYkZne_BwghqhkXB8nc0e5XIQZiT4"
									}
								],
								"url": {
									"raw": "https://stg.api.gomygo.com/api/v1/admin/live-trip/desktop/auto-live-sync",
									"protocol": "https",
									"host": [
										"stg",
										"api",
										"gomygo",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"live-trip",
										"desktop",
										"auto-live-sync"
									]
								},
								"description": "Generated from cURL: curl -X 'POST' \\\r\n  'https://stg.api.gomygo.com/api/v1/admin/live-trip/desktop/auto-live-sync' \\\r\n  -H 'accept: */*' \\\r\n  -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY4N2Y2ZDRjZGFiNGQzMmI3YWRjNTA4NSIsImZ1bGxOYW1lIjoidGVzdCBrdXNoZmludGVjaCIsIm1vYmlsZU51bWJlciI6Ijk4NTc0NDQ0NDQiLCJlbWFpbCI6InNhdHlhbkBnb215Z28uY29tIiwidHlwZSI6IkFETUlOX1NUQUZGIiwiY29kZSI6IlNaQVFLRUFEIiwic2VydmljZVR5cGUiOiJBRE1JTiJ9LCJpYXQiOjE3NTM4NjQ4NjYsIm5iZiI6MTc1Mzg2NDg2NiwiZXhwIjoxNzUzODkzNjY2LCJhdWQiOiJodHRwczovL2V4YW1wbGUuY29tIiwiaXNzIjoiZ21nIiwic3ViIjoiR01HRGV2ZWxvcG1lbnQifQ._-LB1-En6GSMgeJYkZne_BwghqhkXB8nc0e5XIQZiT4' \\\r\n  -d ''"
							},
							"response": []
						},
						{
							"name": "Live trip lists",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is correct\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"const json = pm.response.json();\r",
											"pm.test(\"Response contains a data array with at least one item\", function () {\r",
											"    pm.expect(json).to.have.property(\"data\").that.is.an(\"array\").with.length.above(0);\r",
											"});\r",
											"\r",
											"const keys = [\r",
											"    \"_id\", \"refId\", \"org\", \"orgName\", \"route\", \"vehicle\", \"routeDetails\",\"bookingEndTimeInMinutes\",\"hideTripFromMerchant\",\r",
											"    \"startTime\", \"reachTime\", \"isActive\", \"bookingEndTime\",\"contactPerson\",\r",
											"    \"isRefundable\", \"name\",\"accountId\", \"seats\", \"seatInformation\", \"status\",\r",
											"    \"shift\", \"duration\", \"availableSeats\", \"unBookedSeats\", \"totalSeats\",\"orgCode\", \"completedAt\",\r",
											"    \"base\", \"maxPrice\",\"minPrice\", \"vehicleSettings\",\"showLiveTripSetting\"  ,\"priceReduceLiveTripSetting\", \r",
											"     \"bookingServiceCharge\", \"selfBookingServiceCharge\", \"staffBookingCommission\", \"additionalDiscount\" ,\"createdAt\", \"updatedAt\", \"currentTime\", \"tripCutoffTime\", \"source\", \"destination\", \"discountedPrices\", \"minDiscountedPrice\", \"maxDiscountedPrice\"\r",
											"];\r",
											"\r",
											"// Loop through all trips\r",
											"json.data.forEach((trip, index) => {\r",
											"    pm.test(`Trip ${index + 1}: All keys are present`, function () {\r",
											"        keys.forEach(key => {\r",
											"            pm.expect(trip, `Missing key: ${key}`).to.have.property(key);\r",
											"        });\r",
											"    });\r",
											"\r",
											"   pm.test(`Trip ${index + 1}: Property types are correct`, function () {\r",
											"    const expectedTypes = {\r",
											"        _id: \"string\",\r",
											"        refId: \"string\",\r",
											"        org: \"string\",\r",
											"        route: \"array\",\r",
											"        vehicle: \"object\",\r",
											"        routeDetails: \"object\",\r",
											"        bookingEndTimeInMinutes: \"number\",\r",
											"        hideTripFromMerchant: \"boolean\",\r",
											"        startTime: \"string\",\r",
											"        reachTime: \"string\",\r",
											"        isActive: \"boolean\",\r",
											"        contactPerson: \"array\",\r",
											"        name: \"string\",\r",
											"        accountId: \"string\",\r",
											"        seats: \"array\",\r",
											"        seatInformation: \"object\",\r",
											"        status: \"string\",\r",
											"        shift: \"string\",\r",
											"        duration: \"number\",\r",
											"        availableSeats: \"number\",\r",
											"        unBookedSeats: \"number\",\r",
											"        totalSeats: \"number\",\r",
											"        orgCode: \"string\",\r",
											"        base: \"number\",\r",
											"        maxPrice: \"number\",\r",
											"        mixPrice: \"number\",\r",
											"        vehicleSettings: \"object\",\r",
											"        showLiveTripSetting: \"object\",\r",
											"        priceReduceLiveTripSetting: \"object\",\r",
											"        createdAt: \"string\",\r",
											"        updatedAt: \"string\",\r",
											"        orgName: \"string\",\r",
											"        bookingServiceCharge: \"object\",\r",
											"        selfBookingServiceCharge: \"object\",\r",
											"        staffBookingCommission: \"array\",\r",
											"        additionalDiscount: \"number\",\r",
											"        currentTime: \"string\",\r",
											"        tripCutoffTime: \"number\",\r",
											"        source: \"object\",\r",
											"        destination: \"object\",\r",
											"        discountedPrices: \"array\",\r",
											"        minDiscountedPrice: \"number\",\r",
											"        maxDiscountedPrice: \"number\"\r",
											"    };\r",
											"\r",
											"    Object.entries(expectedTypes).forEach(([key, expectedType]) => {\r",
											"        try {\r",
											"            pm.expect(trip).to.have.property(key);\r",
											"            pm.expect(trip[key], `Key '${key}' should be of type ${expectedType} but got ${typeof trip[key]}`).to.be.a(expectedType);\r",
											"        } catch (error) {\r",
											"            console.error(`❌ Trip ${index + 1}: Type check failed for key '${key}' - Value:`, trip[key]);\r",
											"            throw error;\r",
											"        }\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"    pm.test(`Trip ${index + 1}: Vehicle keys`, function () {\r",
											"        const profile = trip.vehicle.profile;\r",
											"\r",
											"        trip.vehicle.configs.forEach(config => {\r",
											"            pm.expect(config).to.have.property(\"type\").that.is.a(\"string\");\r",
											"            pm.expect(config).to.have.property(\"value\").that.is.a(\"string\");\r",
											"        });\r",
											"    });\r",
											"\r",
											"pm.test(`Trip ${index + 1}: Vehicle keys are present`, function () {\r",
											"    const vehicle = trip.vehicle;\r",
											"    pm.expect(vehicle).to.be.an(\"object\");\r",
											"\r",
											"    const vehicleKeys = [\r",
											"        \"_id\", \"createdAt\", \"updatedAt\", \"org\", \"model\", \"name\", \"numberPlate\",\r",
											"        \"isActive\", \"status\", \"makeYear\", \"purchasedYear\", \"bluebookNumber\",\r",
											"        \"bluebookRenewedDate\", \"bluebookExpiryDate\", \"insuranceNumber\",\r",
											"        \"insuranceRenewedDate\", \"insuranceExpiryDate\"\r",
											"    ];\r",
											"\r",
											"    vehicleKeys.forEach(key => {\r",
											"        pm.expect(vehicle, `Trip ${index + 1}: Missing vehicle key ${key}`).to.have.property(key);\r",
											"    });\r",
											"});\r",
											"\r",
											"pm.test(`Trip ${index + 1}: Route array and keys`, function () {\r",
											"    pm.expect(trip).to.have.property(\"route\").that.is.an(\"array\");\r",
											"\r",
											"    trip.route.forEach((routePoint, rIndex) => {\r",
											"        pm.expect(routePoint, `Trip ${index + 1} Route ${rIndex + 1}: is an object`).to.be.an(\"object\");\r",
											"\r",
											"        const expectedKeys = {\r",
											"            _id: \"string\",\r",
											"            name: \"string\",\r",
											"            placeName: \"string\",\r",
											"            place: \"string\",\r",
											"            note: \"string\",\r",
											"            landmark: \"string\",\r",
											"            duration: \"number\",\r",
											"            isDropOff: \"boolean\",\r",
											"            isPickup: \"boolean\",\r",
											"            index: \"number\"\r",
											"        };\r",
											"        \r",
											"\r",
											"        Object.entries(expectedKeys).forEach(([key, type]) => {\r",
											"            pm.expect(routePoint, `Trip ${index + 1} Route ${rIndex + 1}: missing ${key}`).to.have.property(key);\r",
											"            pm.expect(routePoint[key], `Trip ${index + 1} Route ${rIndex + 1}: ${key} should be ${type}`)\r",
											"              .to.be.a(type);\r",
											"        });\r",
											"    });\r",
											"});\r",
											"\r",
											"pm.test(`Trip ${index + 1}: routeDetails keys and types`, function () {\r",
											"    pm.expect(trip).to.have.property(\"routeDetails\").that.is.an(\"object\");\r",
											"\r",
											"    const expectedKeys = {\r",
											"        _id: \"string\",\r",
											"        name: \"string\",\r",
											"        duration: \"string\" // Note: even though it's a number-like value, it comes as a string\r",
											"    };\r",
											"\r",
											"    Object.entries(expectedKeys).forEach(([key, type]) => {\r",
											"        pm.expect(trip.routeDetails, `Trip ${index + 1}: routeDetails missing '${key}'`).to.have.property(key);\r",
											"        pm.expect(trip.routeDetails[key], `Trip ${index + 1}: routeDetails.${key} should be ${type}`)\r",
											"          .to.be.a(type);\r",
											"    });\r",
											"});\r",
											"\r",
											"pm.test(`Trip ${index + 1}: contactPerson array and keys`, function () {\r",
											"    pm.expect(trip).to.have.property(\"contactPerson\").that.is.an(\"array\");\r",
											"\r",
											"    trip.contactPerson.forEach((person, pIndex) => {\r",
											"        pm.expect(person, `Trip ${index + 1} Contact ${pIndex + 1}: is an object`).to.be.an(\"object\");\r",
											"\r",
											"        const expectedKeys = {\r",
											"            user: \"string\",\r",
											"            type: \"string\",\r",
											"            notifyPreferences: \"object\",\r",
											"            notifyMediumPreferences: \"object\",\r",
											"            fullName: \"string\",\r",
											"            mobileNumber: \"string\",\r",
											"            email: \"string\",\r",
											"            photo: \"object\"\r",
											"        };\r",
											"\r",
											"        Object.entries(expectedKeys).forEach(([key, type]) => {\r",
											"            pm.expect(person, `Trip ${index + 1} Contact ${pIndex + 1}: missing '${key}'`).to.have.property(key);\r",
											"            pm.expect(person[key], `Trip ${index + 1} Contact ${pIndex + 1}: ${key} should be ${type}`)\r",
											"              .to.be.a(type);\r",
											"        });\r",
											"\r",
											"        // Nested: notifyPreferences\r",
											"        const notifyPrefs = person.notifyPreferences;\r",
											"        const notifyKeys = [\"booking\", \"bookingCancel\"];\r",
											"        notifyKeys.forEach(key => {\r",
											"            pm.expect(notifyPrefs, `notifyPreferences missing '${key}'`).to.have.property(key).that.is.a(\"boolean\");\r",
											"        });\r",
											"\r",
											"        // Nested: notifyMediumPreferences\r",
											"        const mediumPrefs = person.notifyMediumPreferences;\r",
											"        const mediumKeys = [\"email\", \"sms\", \"whatsApp\"];\r",
											"        mediumKeys.forEach(key => {\r",
											"            pm.expect(mediumPrefs, `notifyMediumPreferences missing '${key}'`).to.have.property(key).that.is.a(\"boolean\");\r",
											"        });\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(`Trip ${index + 1}: seats array and keys`, function () {\r",
											"    pm.expect(trip).to.have.property(\"seats\").that.is.an(\"array\");\r",
											"\r",
											"    trip.seats.forEach((seat, sIndex) => {\r",
											"        pm.expect(seat, `Trip ${index + 1} Seat ${sIndex + 1}: is an object`).to.be.an(\"object\");\r",
											"\r",
											"        const expectedFields = {\r",
											"            _id: \"string\",\r",
											"            rowSpan: \"number\",\r",
											"            columnSpan: \"number\",\r",
											"            row: \"number\",\r",
											"            column: \"number\",\r",
											"            layer: \"number\",\r",
											"            orientation: \"number\",\r",
											"            title: \"string\",\r",
											"            configs: \"array\",\r",
											"            status: \"string\",\r",
											"            price: \"number\",\r",
											"            discount: \"number\",\r",
											"            discountType: \"string\",\r",
											"            variant: \"string\",\r",
											"            gender: \"string\",\r",
											"            genderConfig: \"string\",\r",
											"            group: \"array\",\r",
											"            attached: \"array\",\r",
											"            isGroupBookingEnabled: \"boolean\",\r",
											"            groupDiscount: \"number\",\r",
											"            hideFromMerchant: \"boolean\",\r",
											"            isBooked: \"boolean\",\r",
											"            lastActivity: \"number\"\r",
											"        };\r",
											"\r",
											"        Object.entries(expectedFields).forEach(([key, type]) => {\r",
											"            pm.expect(seat, `Trip ${index + 1} Seat ${sIndex + 1}: missing '${key}'`).to.have.property(key);\r",
											"            pm.expect(seat[key], `Trip ${index + 1} Seat ${sIndex + 1}: ${key} should be ${type}`)\r",
											"              .to.be.a(type);\r",
											"        });\r",
											"\r",
											"        // Nullable fields\r",
											"        const nullableFields = [\"bookedBy\", \"merchantId\", \"sessionId\", \"jobId\", \"booking\"];\r",
											"        nullableFields.forEach(key => {\r",
											"            pm.expect(seat, `Trip ${index + 1} Seat ${sIndex + 1}: missing '${key}'`).to.have.property(key);\r",
											"            const value = seat[key];\r",
											"            pm.expect(\r",
											"                value === null || typeof value === \"string\" || typeof value === \"object\",\r",
											"                `Trip ${index + 1} Seat ${sIndex + 1}: ${key} should be null, string, or object`\r",
											"            ).to.be.true;\r",
											"        });\r",
											"    });\r",
											"});\r",
											"\r",
											"pm.test(`Trip ${index + 1}: seatInformation keys and types`, function () {\r",
											"    pm.expect(trip).to.have.property(\"seatInformation\").that.is.an(\"object\");\r",
											"\r",
											"    const expectedSeatInfo = {\r",
											"        _id: \"string\",\r",
											"        totalRow: \"number\",\r",
											"        totalColumn: \"number\"\r",
											"    };\r",
											"\r",
											"    Object.entries(expectedSeatInfo).forEach(([key, type]) => {\r",
											"        pm.expect(trip.seatInformation, `Trip ${index + 1}: seatInformation missing '${key}'`).to.have.property(key);\r",
											"        pm.expect(trip.seatInformation[key], `Trip ${index + 1}: seatInformation.${key} should be ${type}`)\r",
											"          .to.be.a(type);\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"[\"source\", \"destination\"].forEach((locationType) => {\r",
											"    pm.test(`Trip ${index + 1}: ${locationType} keys and types`, function () {\r",
											"        const location = trip[locationType];\r",
											"        pm.expect(location, `Trip ${index + 1}: ${locationType} should be an object`).to.be.an(\"object\");\r",
											"\r",
											"        const expectedKeys = {\r",
											"            _id: \"string\",\r",
											"            name: \"string\",\r",
											"            placeName: \"string\",\r",
											"            place: \"string\",\r",
											"            note: \"string\",\r",
											"            landmark: \"string\",\r",
											"            duration: \"number\",\r",
											"            isDropOff: \"boolean\",\r",
											"            isPickup: \"boolean\",\r",
											"            index: \"number\"\r",
											"        };\r",
											"\r",
											"        Object.entries(expectedKeys).forEach(([key, type]) => {\r",
											"            pm.expect(location, `Trip ${index + 1}: ${locationType} missing '${key}'`).to.have.property(key);\r",
											"            pm.expect(location[key], `Trip ${index + 1}: ${locationType}.${key} should be ${type}`)\r",
											"              .to.be.a(type);\r",
											"        });\r",
											"    });\r",
											"});\r",
											"\r",
											"    pm.test(`Trip ${index + 1}: Seat validation`, function () {\r",
											"        trip.seats.forEach(seat => {\r",
											"            pm.expect(seat).to.have.property(\"title\").that.is.a(\"string\");\r",
											"            pm.expect(seat).to.have.property(\"price\").that.is.a(\"number\");\r",
											"            pm.expect(seat).to.have.property(\"status\").that.is.a(\"string\");\r",
											"            pm.expect(seat).to.have.property(\"isBooked\").that.is.a(\"boolean\");\r",
											"        });\r",
											"    });\r",
											"\r",
											"    pm.test(`Trip ${index + 1}: isActive is true and status is live`, function () {\r",
											"        pm.expect(trip.isActive).to.eql(true);\r",
											"        pm.expect(trip.status).to.eql(\"LIVE\");\r",
											"\r",
											"\r",
											"    });\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "user-agent",
										"value": "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.7.9; rv:7.8) Gecko/20100101 Firefox/7.8.2"
									},
									{
										"key": "__utc_offset_minute",
										"value": ""
									},
									{
										"key": "x-custom-lang",
										"value": "en"
									},
									{
										"key": "x-timestamp",
										"value": "1749865689002"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY3ODg2YWU2YmVjODJmZWMzOTZkZDZiNiIsImZ1bGxOYW1lIjoiYmliZWthbmFuZCBrdXNod2FoYSIsIm1vYmlsZU51bWJlciI6Ijk4MDU2NzU1ODAiLCJlbWFpbCI6ImJpYmVrYW5hbmRAa3VzaGZpbnRlY2guY29tIiwidHlwZSI6IkFETUlOX1NUQUZGIiwiY29kZSI6IlFQUlVXVUNBIiwic2VydmljZVR5cGUiOiJBRE1JTiJ9LCJpYXQiOjE3NTAwNDYwMTgsIm5iZiI6MTc1MDA0NjAxOCwiZXhwIjoxNzUwMDc0ODE4LCJhdWQiOiJodHRwczovL2V4YW1wbGUuY29tIiwiaXNzIjoiZ21nIiwic3ViIjoiR01HRGV2ZWxvcG1lbnQifQ.Pt6AWouik43nNfejy4SuUF8gUVtRfXtuobTLCGhxM1E"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/admin/live-trip/desktop/list?date=2025/08/1&perPage=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"live-trip",
										"desktop",
										"list"
									],
									"query": [
										{
											"key": "seats",
											"value": "1",
											"disabled": true
										},
										{
											"key": "from",
											"value": "bc4b3caf74c478facbaffb9d",
											"disabled": true
										},
										{
											"key": "to",
											"value": "7c49b287b9c4ac8efbea581e",
											"disabled": true
										},
										{
											"key": "isRefundable",
											"value": "true%2Cfalse",
											"disabled": true
										},
										{
											"key": "shift",
											"value": "DAY",
											"disabled": true
										},
										{
											"key": "date",
											"value": "2025/08/1"
										},
										{
											"key": "operator",
											"value": "b1da2dfcbde959edf4f06c3b",
											"disabled": true
										},
										{
											"key": "departure",
											"value": "MORNING%2CDAY%2CEVENING%2CNIGHT",
											"disabled": true
										},
										{
											"key": "vehicle",
											"value": "95d018b0fddfcdb82b5d7804",
											"disabled": true
										},
										{
											"key": "perPage",
											"value": "100"
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "orderBy",
											"value": "createdAt",
											"disabled": true
										}
									]
								},
								"description": "Generated from cURL: curl -X 'GET' \\\r\n  'https://stg.api.gomygo.com/api/v1/admin/live-trip/desktop/list?seats=1&from=bc4b3caf74c478facbaffb9d&to=7c49b287b9c4ac8efbea581e&isRefundable=true%2Cfalse&shift=DAY&date=2022-12-31T18%3A15%3A00.000Z&operator=b1da2dfcbde959edf4f06c3b&departure=MORNING%2CDAY%2CEVENING%2CNIGHT&vehicle=95d018b0fddfcdb82b5d7804&perPage=20&page=1&orderBy=createdAt' \\\r\n  -H 'accept: application/json' \\\r\n  -H 'user-agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.7.9; rv:7.8) Gecko/20100101 Firefox/7.8.2' \\\r\n  -H __utc_offset_minute: -345 \\\r\n  -H 'x-custom-lang: en' \\\r\n  -H 'x-timestamp: 1749865689002' \\\r\n  -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjY3ODg2YWU2YmVjODJmZWMzOTZkZDZiNiIsImZ1bGxOYW1lIjoiYmliZWthbmFuZCBrdXNod2FoYSIsIm1vYmlsZU51bWJlciI6Ijk4MDU2NzU1ODAiLCJlbWFpbCI6ImJpYmVrYW5hbmRAa3VzaGZpbnRlY2guY29tIiwidHlwZSI6IkFETUlOX1NUQUZGIiwiY29kZSI6IlFQUlVXVUNBIiwic2VydmljZVR5cGUiOiJBRE1JTiJ9LCJpYXQiOjE3NTAwNDYwMTgsIm5iZiI6MTc1MDA0NjAxOCwiZXhwIjoxNzUwMDc0ODE4LCJhdWQiOiJodHRwczovL2V4YW1wbGUuY29tIiwiaXNzIjoiZ21nIiwic3ViIjoiR01HRGV2ZWxvcG1lbnQifQ.Pt6AWouik43nNfejy4SuUF8gUVtRfXtuobTLCGhxM1E'"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Whatsapp",
			"item": [
				{
					"name": "https://whatsapp.brandingbeam.app/api/send_group",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"group_id\": \"120363403190045318@g.us\",\n\"type\": \"text\",\n\"message\": \"Hey guys\",\n\"instance_id\": \"67654271DC77F\",\n\"access_token\": \"676133fe058cb\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://whatsapp.brandingbeam.app/api/send_group",
							"protocol": "https",
							"host": [
								"whatsapp",
								"brandingbeam",
								"app"
							],
							"path": [
								"api",
								"send_group"
							]
						}
					},
					"response": []
				},
				{
					"name": "https://whatsapp.brandingbeam.app/api/send_group Copy",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"number\": \"9779861566389\",\n\"type\": \"text\",\n\"message\": \"Hey guys\",\n\"instance_id\": \"67654271DC77F\",\n\"access_token\": \"676133fe058cb\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://whatsapp.brandingbeam.app/api/send",
							"protocol": "https",
							"host": [
								"whatsapp",
								"brandingbeam",
								"app"
							],
							"path": [
								"api",
								"send"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}